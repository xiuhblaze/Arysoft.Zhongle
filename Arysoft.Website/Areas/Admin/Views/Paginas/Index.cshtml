@using Arysoft.Website.Areas.Admin.Models;
@using Arysoft.Website.Models;
@using PagedList.Mvc;

@model PagedList.IPagedList<PaginaIndexListViewModel>

@{
    ViewBag.Title = "Paginas";
}

<div class="modal fade" id="detailsModal" tabindex="-1" aria-labelledby="detailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content" id="details-modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="detailsModalLabel">Pagina</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="details-modal-body">
                ...
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">...</button>
            </div>
        </div> <!-- modal-content -->
    </div>
</div>

<h2>Páginas</h2>
<div class="row">
    <div class="col-md-12">
        @using (Html.BeginForm("Index", "Paginas", FormMethod.Get, new { @class = "form-inline mb-2" }))
        {
            @Html.Raw(
                Html.ActionLink("[nuevo]", "Create", null, new { @class = "btn btn-outline-primary mr-3", @title = "Nueva pagina" }).ToHtmlString()
                    .Replace("[nuevo]", "<i class='bi-file-earmark-fill'></i>")
            )
            <label class="sr-only" for="">Buscar</label>
            @Html.TextBox("buscar", ViewBag.Filtro as string, htmlAttributes: new { @class = "form-control mr-sm-2", @placeholder = "buscar..." })
            <button type="submit" id="buscarButton" class="btn btn-primary" title="Buscar...">
                <i class="bi-search"></i>
            </button>
        }
        <div class="alert alert-secondary mb-0" role="alert">
            Total de resultados en la consulta: @ViewBag.Count
        </div>
    </div>
</div>
@Html.PagedListPager(Model, pagina => Url.Action("Index", new
    {
        pagina,
        orden = ViewBag.Orden,
        filtro = ViewBag.Filtro
    })
)

<div class="list-group">
    @foreach (var item in Model)
    {
        string classListGroup = "list-group-item list-group-item-action";
        string classStatusIcon = "(status icon)";
        string classGaleriaIcon = "<i class='bi-image text-muted icon' title='Galeria deshabilitada'></i> Sin galeria";
        string classEsPrincipalIcon = "";
        string classArchivosIcon = "<i class='bi-paperclip text-muted icon' title='Sin archivos'></i> sin archivos";
        string classNotasIcon = "<i class='bi-square-fill text-muted icon' title='Sin notas'></i> sin notas";
        string classMeGustaBadge = "badge badge-primary";
        string classVisitasBadge = "badge badge-success";

        switch (item.Status)
        {
            case PaginaStatus.Nueva:
                classListGroup += " list-group-item-primary";
                classStatusIcon = "<i class='bi-stars mr-1 text-primary icon' title='Nueva'></i> Nueva";
                break;
            case PaginaStatus.Publicada:
                //classListGroup += " list-group-item-success";
                classStatusIcon = "<i class='bi-cursor mr-1 text-success icon' title='Publicada'></i> Publicada";
                break;
            case PaginaStatus.Oculta:
                classListGroup += " list-group-item-secondary";
                classStatusIcon = "<i class='bi-eye-slash mr-1 icon' title='Oculta'></i> Oculta";
                break;
        }

        if (item.TieneGaleria == BoolTipo.Si)
        {
            classGaleriaIcon = "<i class='bi-image icon text-success' title='Galeria habilitda'></i> Tiene galeria";
        }

        if (item.EsPrincipal == BoolTipo.Si)
        {
            classEsPrincipalIcon = "<i class='bi-award icon text-danger' title='Es página principal'></i> Es principal | ";
        }

        if (item.ContadorArchivos > 0)
        {
            classArchivosIcon = "<i class='bi-paperclip text-info icon' title='" + item.ContadorArchivos + " archivo(s)'></i> " + item.ContadorArchivos + " archivo(s)";
        }

        if (item.ContadorNotas > 0)
        {
            classNotasIcon = "<i class='bi-square-fill text-warning icon' title='" + item.ContadorNotas + " nota(s)'></i> " + item.ContadorNotas + " nota(s)";
        }

        <div class="@classListGroup">
            <div class="d-flex w-100 justify-content-between">
                <h5 class="mb-0">
                    <a href="javascript: getDetails('@item.PaginaID');" title="Ver detalles de la página">
                        @Html.DisplayFor(modelItem => item.Titulo)
                    </a>&nbsp;
                    <small title="Página padre">@Html.DisplayFor(modelItem => item.TituloPaginaPadre)</small>
                    @if (!string.IsNullOrEmpty(item.FriendlyUrl))
                    {
                        <br />
                        <small style="font-size: 60%;" class="text-success">
                            /Paginas/@Html.DisplayFor(modelItem => item.FriendlyUrl)
                        </small>
                    }
                </h5>
                <div>
                    @if (item.Status != PaginaStatus.Eliminada)
                    {
                        @Html.Raw(
                            @Html.ActionLink("[editar]", "Edit", new { id = item.PaginaID }, new { @class = "btn btn-link btn-sm" }).ToHtmlString()
                                .Replace("[editar]", "<i class='bi-pencil-square' style='font-size: 1.2rem;'></i>")
                        );
                    }
                    <span href="#" onclick="getDetails('@item.PaginaID'); return false;" class="btn btn-link btn-sm">
                        <i class='bi-info-square' style='font-size: 1.2rem;' title="Detalles"></i>
                    </span>
                    <span href="#" onclick="getDelete('@item.PaginaID'); return false;" class="btn btn-link btn-sm text-danger">
                        <i class='bi-x-square' style='font-size: 1.2rem;' title="Eliminar"></i>
                    </span>
                </div>
            </div>
            <p class="mb-1" title="Resumen">@Html.DisplayFor(modelItem => item.Resumen)</p>
            <p class="mb-1">
                <span class="@classMeGustaBadge">
                    <i class="bi-hand-thumbs-up-fill"></i>
                    Me gusta: @Html.DisplayFor(modelItem => item.MeGusta)
                </span>
                <span class="@classVisitasBadge">
                    <i class="bi-eye-fill"></i>
                    Visitas: @Html.DisplayFor(modelItem => item.ContadorVisitas)
                </span>
            </p>
            <p class="mb-0">
                @Html.Raw(classStatusIcon) |
                @Html.Raw(classGaleriaIcon) |
                @Html.Raw(classEsPrincipalIcon)
                Idioma: <strong>@item.Idioma.GetDisplayName()</strong> |
                Target: <strong>@Html.DisplayFor(modelItem => item.Target)</strong> |
                @Html.Raw(classArchivosIcon) |
                @Html.Raw(classNotasIcon)
            </p>
        </div>
    }
</div>

@Html.PagedListPager(Model, pagina => Url.Action("Index", new
    {
        pagina,
        orden = ViewBag.Orden,
        filtro = ViewBag.Filtro
    })
)

@section scripts {
    <script>
        var modalDetailsOriginalContent = $('#details-modal-content').html();

        $(document).ready(function () {

            $('#detailsModal').on('hidden.bs.modal', function (e) {

                $('#details-modal-content').html(modalDetailsOriginalContent);
            })
        });

        function getDetails(id) {
            var url = '@Url.Action("Details", "Paginas")/' + id;

            $('#detailsModal').modal('show');
            $.ajax({
                cache: false,
                async: true,
                type: 'get',
                url: url,
                data: {},
                beforeSend: function () {
                    $('#details-modal-body').html('<p class="text-center" style="margin: 50px;"><img src="@Url.Content("~/Images/ajax-loader.gif")" /></p>');
                },
                success: function (vista) {
                    switch (vista) {
                        case "BadRequest":
                            alert('No se recibió un identificador de la página');
                            $('#detailsModal').modal('hide');
                            $('#details-modal-content').html(modalDetailsOriginalContent);
                            break;
                        case "HttpNotFound":
                            alert('No se encontró la página solicitada');
                            $('#detailsModal').modal('hide');
                            $('#details-modal-content').html(modalDetailsOriginalContent);
                            break;
                        default:
                            $('#details-modal-content').html(vista);
                            break;
                    }
                },
                error: function (xhr, status, error) {
                    alert('A ocurrido una excepción: ' + status + '\n error: ' + error);
                }
            });
        } // getDetails

        function getDelete(id) {
            var url = '@Url.Action("Delete", "Paginas")/' + id;

            $('#detailsModal').modal('show');
            $.ajax({
                cache: false,
                async: true,
                type: 'get',
                url: url,
                data: {},
                beforeSend: function () {
                    $('#details-modal-body').html('<p class="text-center" style="margin: 50px;"><img src="@Url.Content("~/Images/ajax-loader.gif")" /></p>');
                },
                success: function (vista) {
                    switch (vista) {
                        case "BadRequest":
                            alert('No se recibió un identificador de la página');
                            $('#detailsModal').modal('hide');
                            $('#details-modal-content').html(modalDetailsOriginalContent);
                            break;
                        case "HttpNotFound":
                            alert('No se encontró la página solicitada');
                            $('#detailsModal').modal('hide');
                            $('#details-modal-content').html(modalDetailsOriginalContent);
                            break;
                        default:
                            $('#details-modal-content').html(vista);
                            break;
                    }
                },
                error: function (xhr, status, error) {
                    alert('A ocurrido una excepción: ' + status + '\n error: ' + error);
                }
            });
        } // getDelete

    </script>
}