@model Arysoft.Website.Models.RegisterViewModel
@{
    ViewBag.Title = "Nuevo";
}

<div class="container">
    <h2 class="my-3">Usuario <small style="text-transform: uppercase;">@ViewBag.Title</small></h2>
    @using (Html.BeginForm("Create", "UsersAdmin", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()

        <div class="row my-5 pb-5">
            <div class="col-md-12">
                <div class="card shadow">
                    <div class="card-header">
                        Datos del usuario
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-8">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                <div class="form-group">
                                    @Html.LabelFor(m => m.Email, new { @class = "" })
                                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @aria_describedby = "emailHelp" })
                                    <small id="emailHelp" class="form-text text-muted">El correo electrónico es también el nombre de usuario.</small>
                                </div>

                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.Password, new { @class = "" })
                                            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "" })
                                            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                                        </div>
                                    </div>
                                </div>

                                <hr />

                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.Nombres, new { @class = "" })
                                            @Html.TextBoxFor(m => m.Nombres, new { @class = "form-control" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.PrimerApellido, new { @class = "" })
                                            @Html.TextBoxFor(m => m.PrimerApellido, new { @class = "form-control" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.SegundoApellido, new { @class = "" })
                                            @Html.TextBoxFor(m => m.SegundoApellido, new { @class = "form-control" })
                                        </div>
                                    </div>
                                </div>
                                
                                
                                
                                @*<div class="form-group">
                                    @Html.LabelFor(m => m.SectorID, new { @class = "col-md-2 control-label" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("SectorID", null, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.SectorID, "", new { @class = "text-danger" })
                                    </div>
                                </div>*@
                            </div>
                            <div class="col-md-4">
                                <h3>Roles</h3>
                                <p>Selecciona los roles a los que pertenece el usuario.</p>
                                <ul class="list-group list-group-flush">
                                    @foreach (var item in (SelectList)ViewBag.RoleId)
                                    {
                                    <li class="list-group-item">
                                        <label class="checkbox-inline">
                                            <input type="checkbox" name="SelectedRole" value="@item.Value" checked="@item.Selected" class="mr-2" />
                                            @item.Value
                                        </label>
                                    </li>
                                    }
                                </ul>
                            </div>
                        </div>
                    </div>
                    <div class="card-footer text-right">
                        @Html.Raw(
                            @Html.ActionLink("Cancelar", "Index", null, new { @class = "btn btn-secondary" }).ToHtmlString()
                                .Replace("Cancelar", "<i class='bi-x-circle' title='Cancelar'></i> Cancelar")
                        )
                        <button type="submit" class="btn btn-primary">
                            <i class="bi-box-arrow-down"></i>
                            Guardar
                        </button>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
