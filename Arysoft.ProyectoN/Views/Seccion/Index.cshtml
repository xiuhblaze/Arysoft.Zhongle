@model IEnumerable<Arysoft.ProyectoN.Models.Seccion>

@{
    ViewBag.Title = "Secciones";
}

<div id="detailsModal" class="modal fade" tabindex="-1" role="dialog" style="display: none;">
    <div class="modal-dialog modal-lg">
        <div class="modal-content" id="detalles-modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Detalles de la sección</h4>
            </div>
            <div id="detalles-modal-body"></div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<div class="container">
    <h2>Secciones</h2>

    @using (Html.BeginForm("Index", "Sector", FormMethod.Get))
    {
        <div class="row">
            <div class="col-md-12">
                <div class="form-inline">
                    @if (User.IsInRole("Admin") || User.IsInRole("Editor"))
                    { 
                    @Html.Raw(
                        Html.ActionLink("[replace]", "Create", null, new { @class = "btn btn-link", @title = "Nueva sección" }).ToHtmlString()
                            .Replace("[replace]", "<span class='glyphicon glyphicon-file glyphicon-toolbar-size'></span>")
                    )
                    }
                    <div class="form-group">
                        <label for="buscar" class="sr-only">Buscar</label>
                        @Html.TextBox("buscar", ViewBag.Filtro as string, htmlAttributes: new { @class = "form-control", @placeholder = "buscar..." })
                    </div>
                    <div class="form-group">
                        <button type="submit" id="buscarButton" class="btn btn-link" title="Buscar">
                            <span class="glyphicon glyphicon-search glyphicon-toolbar-size"></span>
                        </button>
                        @Html.Raw(
                                @Html.ActionLink("Limpiar", "Index", null, new { @class = "btn btn-link" }).ToHtmlString()
                                .Replace("Limpiar", "<span class='glyphicon glyphicon-remove glyphicon-toolbar-size' title='Limpiar'></span>")
                            )
                    </div>
                </div>
            </div>
        </div>
    }

    <div class="well well-sm" style="margin-top: 10px;">
        Total de resultados en la consulta: @Model.Count()
    </div>

    <div class="table-responsive">
        <table class="table table-hover">
            <thead>
                <tr>
                    <th></th>
                    <th>
                        @Html.ActionLink("Sección", "Index", new {
                            orden = ViewBag.OrdenNumero,
                            filtro = ViewBag.Filtro
                        })
                    </th>
                    <th>
                        @Html.ActionLink("Sector", "Index", new {
                            orden = ViewBag.OrdenSector,
                            filtro = ViewBag.Filtro
                        })
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Descripcion)
                    </th>
                    <th>
                        @Html.ActionLink("Casillas", "Index", new {
                            orden = ViewBag.OrdenCasillas,
                            filtro = ViewBag.Filtro
                        })
                    </th>
                    <th>
                        @Html.ActionLink("Colonias", "Index", new {
                            orden = ViewBag.OrdenColonias,
                            filtro = ViewBag.Filtro
                        })
                    </th>
                    <th>
                        @Html.ActionLink("Registrados", "Index", new {
                            orden = ViewBag.OrdenVotantes,
                            filtro = ViewBag.Filtro
                        })
                    </th>

                    <th>
                        Votos seguros/votantes
                    </th>

                    <th>
                        Votaron/Votantes
                    </th>

                    @if (User.IsInRole("Admin") || User.IsInRole("Editor"))
                    {
                    <th class="col-md-1"></th>
                    }
                </tr>
            </thead>
            <tbody>
            @foreach (var item in Model)
            {
                string rowClass = string.Empty;

                int votosSeguros = 0;
                int porcentajeVotosSeguros = 0;
                                
                int totalVotaron = 0;
                int porcentajeVotaron = 0;

                votosSeguros = item.Personas.Where(p => p.VotanteSeguro == BoolTipo.Si).Count();

                foreach (var casilla in item.Casillas)
                {
                    totalVotaron += casilla.YaVotaron;
                }

                if (item.TotalVotantes > 0)
                {
                    porcentajeVotosSeguros = (votosSeguros * 100) / item.TotalVotantes;
                    porcentajeVotaron = (totalVotaron * 100) / item.TotalVotantes;
                }

                switch (item.Status)
                {
                    case StatusTipo.Baja:
                        rowClass = "text-muted";
                        break;
                    case StatusTipo.Eliminado:
                        rowClass = "text-danger";
                        break;
                }

                <tr class="@rowClass">
                    <td>
                        @switch (item.Status)
                        {
                            case StatusTipo.Activo:
                                <span class="glyphicon glyphicon-ok-circle glyphicon-table-action-size text-success" title="@item.Status.GetDisplayName()"></span>
                                break;
                            case StatusTipo.Baja:
                                <span class="glyphicon glyphicon-remove-circle glyphicon-table-action-size text-warning" title="@item.Status.GetDisplayName()"></span>
                                break;
                            case StatusTipo.Eliminado:
                                <span class="glyphicon glyphicon-ban-circle glyphicon-table-action-size text-danger" title="@item.Status.GetDisplayName()"></span>
                                break;
                        }
                    </td>                    
                    <td class="text-right" style="cursor: pointer" onclick="getDetails('@item.SeccionID')">
                        <span class="label label-primary label-default-size">
                            @Html.DisplayFor(modelItem => item.Numero)
                        </span>
                    </td>
                    <td style="cursor: pointer" onclick="getDetails('@item.SeccionID')">
                        @Html.DisplayFor(modelItem => item.Sector.Nombre)
                    </td>
                    <td style="cursor: pointer" onclick="getDetails('@item.SeccionID')">
                        @Html.DisplayFor(modelItem => item.Descripcion)
                    </td>                    
                    <td class="text-right" style="cursor: pointer" onclick="getDetails('@item.SeccionID')">
                        @if (item.Casillas != null)
                        {
                            foreach (var casilla in item.Casillas.OrderBy(c => c.Tipo))
                            {
                                if (casilla.Status == StatusTipo.Activo)
                                {
                                    <span class="label label-info">@casilla.Tipo.GetDisplayName()</span>
                                }
                            }
                        }
                    </td>
                    <td class="text-right" style="cursor: pointer" onclick="getDetails('@item.SeccionID')">
                        @Html.DisplayFor(modelItem => item.Colonias.Count)
                    </td>
                    <td class="text-right" style="cursor: pointer" onclick="getDetails('@item.SeccionID')">
                        @Html.DisplayFor(modelItem => item.Personas.Count)
                    </td>

                    <td class="text-right" style="cursor: pointer" onclick="getDetails('@item.SeccionID')">
                        @votosSeguros / @item.TotalVotantes
                        <div class="progress" title="Votos seguros @porcentajeVotosSeguros%" style="margin-bottom: 0;">
                            <div class="progress-bar progress-bar-info" style="width: @porcentajeVotosSeguros%"></div>
                        </div>
                    </td>

                    <td class="text-right" style="cursor: pointer" onclick="getDetails('@item.SeccionID')">
                        @totalVotaron / @item.TotalVotantes
                        <div class="progress" title="Ya votarón @porcentajeVotaron%" style="margin-bottom: 0;">
                            <div class="progress-bar progress-bar-warning" style="width: @porcentajeVotaron%"></div>
                        </div>
                    </td>

                    @if (User.IsInRole("Admin") || User.IsInRole("Editor"))
                    { 
                    <td class="text-right">
                        @Html.Raw(
                                @Html.ActionLink("Editar", "Edit", new { id = item.SeccionID }).ToHtmlString()
                                    .Replace("Editar", "<span class='glyphicon glyphicon-edit glyphicon-table-action-size' title='Editar'></span>")
                            )

                        @Html.Raw(
                                @Html.ActionLink("Eliminar", "Delete", new { id = item.SeccionID }).ToHtmlString()
                                    .Replace("Eliminar", "<span class='glyphicon glyphicon-trash glyphicon-table-action-size' title='Eliminar'></span>")
                            )
                    </td>
                    }
                </tr>
            }
            </tbody>
        </table>
    </div>
</div>

@section scripts {

<script>

    var modalDetailsOriginalContent = $('#detalles-modal-content').html();

    function getDetails(id) {
        var url = '@Url.Action("Details", "Seccion")/' + id;

        $('#detailsModal').modal('show');

            $.ajax({
                cache: false,
                async: true,
                type: 'get',
                url: url,
                data: {},
                beforeSend: function () {
                    $('#detalles-modal-body').html('<p class="text-center" style="margin: 50px;"><img src="@Url.Content("~/Images/ajax-loader.gif")" /></p>');
                },
                success: function (vista) {
                    switch (vista) {
                        case "noid":
                            alert('No se recibió un identificador de sector');
                            $('#detailsModal').modal('hide');
                            $('#detalles-modal-content').html(modalDetailsOriginalContent);
                            break;
                        case "nofound":
                            alert('No se encontró el sector solicitado');
                            $('#detailsModal').modal('hide');
                            $('#detalles-modal-content').html(modalDetailsOriginalContent);
                            break;
                        default:
                            $('#detalles-modal-content').html(vista);
                            break;
                    }
                },
                error: function (xhr, status, error) {
                    alert('A ocurrido una excepción: ' + status + '\n error: ' + error);
                }
            });
    } // getDetails

    function getPersonaDetails(id) {
        var url = '@Url.Action("Details", "Persona")/' + id;

        $('#detailsModal').modal('show');
        $('#detalles-modal-content').html(modalDetailsOriginalContent);

            $.ajax({
                cache: false,
                async: true,
                type: 'get',
                url: url,
                data: {},
                beforeSend: function () {
                    $('#detalles-modal-body').html('<p class="text-center" style="margin: 50px;"><img src="@Url.Content("~/Images/ajax-loader.gif")" /></p>');
                },
                success: function (vista) {
                    switch (vista) {
                        case "noid":
                            alert('No se recibió un identificador de la persona');
                            $('#detailsModal').modal('hide');
                            $('#detalles-modal-content').html(modalDetailsOriginalContent);
                            break;
                        case "nofound":
                            alert('No se encontró la persona solicitada');
                            $('#detailsModal').modal('hide');
                            $('#detalles-modal-content').html(modalDetailsOriginalContent);
                            break;
                        default:
                            $('#detalles-modal-content').html(vista);
                            break;
                    }
                },
                error: function (xhr, status, error) {
                    alert('A ocurrido una excepción: ' + status + '\n error: ' + error);
                }
            });
    } // getPersonaDetails

    $(document).ready(function () {

        $('#detailsModal').on('hidden.bs.modal', function (e) {

            $('#detalles-modal-content').html(modalDetailsOriginalContent);
        });

    });


</script>

}