@model Arysoft.ProyectoN.Models.Seccion

@{ 

    int votosSeguros = 0;
    int porcentajeVotosSeguros = 0;

    int totalVotaron = 0;
    int porcentajeVotaron = 0;

    votosSeguros = Model.Personas.Where(p => p.VotanteSeguro == BoolTipo.Si).Count();

    foreach (var casilla in Model.Casillas)
    {
        totalVotaron += casilla.YaVotaron;
    }

    if (Model.TotalVotantes > 0)
    {
        porcentajeVotosSeguros = (votosSeguros * 100) / Model.TotalVotantes;
        porcentajeVotaron = (totalVotaron * 100) / Model.TotalVotantes;
    }
}

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
    <h4 class="modal-title">
        Sección <small>DETALLES</small>
    </h4>
</div>

<div class="modal-body">
    @if (Model.NpOrigen == "delete")
    {
        string title = "";
        switch (Model.Status)
        {
            case StatusTipo.Activo:
                title = "¿Está seguro de dar de baja esta sección?";
                break;
            case StatusTipo.Baja:
                title = "¿Está seguro de eliminar esta sección?";
                break;
            case StatusTipo.Eliminado:
                title = "Sección eliminada";
                break;
        }
        <div class="row">
            <div class="col-md-12">
                <h2 class="text-danger">@title</h2>
            </div>
        </div>
    }
    <div class="row">
        <div class="col-md-8">
            <dl class="dl-horizontal">

                <dt>
                    Sector
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Sector.Nombre)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Numero)
                </dt>

                <dd>
                    <span class="label label-primary label-default-size">@Html.DisplayFor(model => model.Numero)</span>
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Descripcion)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Descripcion)
                </dd>

                @*<dt>
                    @Html.DisplayNameFor(model => model.Status)
                </dt>

                <dd>
                    @switch (Model.Status)
                    {
                        case StatusTipo.Activo:
                            <span class="label label-success label-default-size">@Model.Status.GetDisplayName()</span>
                            break;
                        case StatusTipo.Baja:
                            <span class="label label-warning label-default-size">@Model.Status.GetDisplayName()</span>
                            break;
                        case StatusTipo.Eliminado:
                            <span class="label label-danger label-default-size">@Model.Status.GetDisplayName()</span>
                            break;
                    }
                </dd>*@

                <dt></dt>
                <dd><hr /></dd>

                <dt>Votos seguros/votantes</dt>
                <dd>
                    @votosSeguros / @Model.TotalVotantes
                    <div class="progress" title="Votos seguros @porcentajeVotosSeguros%" style="margin-bottom: 0;">
                        <div class="progress-bar progress-bar-info" style="width: @porcentajeVotosSeguros%"></div>
                    </div>
                </dd>

                <dt>Votaron/votantes</dt>
                <dd>
                    @totalVotaron / @Model.TotalVotantes
                    <div class="progress" title="Ya votarón @porcentajeVotaron%" style="margin-bottom: 0;">
                        <div class="progress-bar progress-bar-warning" style="width: @porcentajeVotaron%"></div>
                    </div>
                </dd>

            </dl>
        </div>
        <div class="col-md-4">
            @switch (Model.Status)
            {
                case StatusTipo.Activo:
                    <div class="alert alert-success text-center">
                        <h4 style="margin-bottom: 0;">
                            <span class="glyphicon glyphicon-ok"></span>
                            Activo
                        </h4>
                    </div>
                    break;
                case StatusTipo.Baja:
                    <div class="alert alert-warning text-center">
                        <h4 style="margin-bottom: 0;">
                            <span class="glyphicon glyphicon-save"></span>
                            Baja
                        </h4>
                    </div>
                    break;
                case StatusTipo.Eliminado:
                    <div class="alert alert-danger text-center">
                        <h4 style="margin-bottom: 0;">
                            <span class="glyphicon glyphicon-remove"></span>
                            Eliminado
                        </h4>
                    </div>
                    break;
            }
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <ul class="nav nav-tabs">
                <li class="active">
                    <a href="#casillas" data-toggle="tab">
                        <span class="glyphicon glyphicon-erase"></span>
                        Casillas
                        <span class="badge">@Model.Casillas.Count()</span>
                    </a>
                </li>
                <li>
                    <a href="#colonias" data-toggle="tab">
                        <span class="glyphicon glyphicon-home"></span>
                        Colonias
                        <span class="badge">@Model.Colonias.Count()</span>
                    </a>
                </li>
                <li>
                    <a href="#votantes" data-toggle="tab">
                        <span class="glyphicon glyphicon-erase"></span>
                        Votantes
                        <span class="badge">@Model.Personas.Count()</span>
                    </a>
                </li>
            </ul>

            <div class="tab-content">
                <div class="tab-pane fade in active" name="casillas" id="casillas">
                    <h4>Casillas</h4>

                    <div id="listaCasillas" name="listaCasillas" style="max-height: 400px; overflow-y: scroll;">
                        @Html.Partial("_listaCasillas", Model)
                    </div>
                </div>

                <div class="tab-pane fade in" name="colonias" id="colonias">
                    <h4>Colonias</h4>

                    <div id="listaColonias" name="listaColonias" style="max-height: 400px; overflow-y: scroll;">
                        @Html.Partial("_listaColonias", Model)
                    </div>
                </div>

                <div class="tab-pane fade in" name="votantes" id="votantes">
                    <h4>Votantes</h4>

                    <div id="listaVotantes" name="listaVotantes" style="max-height: 400px; overflow-y: scroll;">
                        @Html.Partial("_listaVotantes", Model)
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal-footer">
    <div class="row">
        <div class="col-md-8 text-left text-muted">
            <small>
                <strong>Actualizado por</strong> @Model.UserNameActualizacion |
                <strong>Última actualización</strong> @Model.FechaActualizacion.ToShortDateString()
            </small>
        </div>
        <div class="col-md-4 text-right">
            <button type="button" class="btn btn-default" data-dismiss="modal">
                <span class="glyphicon glyphicon-remove"></span>
                Cancelar
            </button>

            @if (User.IsInRole("Admin") || User.IsInRole("Editor"))
            {
                switch (Model.Status)
                {
                    case StatusTipo.Activo:
                        if (Model.NpOrigen == "details")
                        {
                            @Html.Raw(
                                 @Html.ActionLink("Editar", "Edit", new { id = Model.SeccionID }, new { @class = "btn btn-primary" }).ToHtmlString()
                                     .Replace("Editar", "<span class='glyphicon glyphicon-edit' title='Editar'></span> Editar"))
                        }
                        else if (Model.NpOrigen == "delete")
                        {
                            <form action="/Seccion/Delete/@Model.SeccionID" method="post" style="float: right; margin-left: .5em;">
                                @Html.AntiForgeryToken()
                                <button type="submit" class="btn btn-warning">
                                    <span class='glyphicon glyphicon-trash' title='Dar de Baja'></span> Baja
                                </button>
                            </form>
                        }
                        break;

                    case StatusTipo.Baja:
                        switch (Model.NpOrigen)
                        {
                            case "details":
                                <form action="/Seccion/Activar/@Model.SeccionID" method="post" style="float: right; margin-left: .5em;">
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="btn btn-success">
                                        <span class='glyphicon glyphicon-ok' title='Reactivar'></span> Reactivar
                                    </button>
                                </form>
                                break;

                            case "delete":
                                <form action="/Seccion/Delete/@Model.SeccionID" method="post" style="float: right; margin-left: .5em;">
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="btn btn-danger">
                                        <span class='glyphicon glyphicon-trash' title='Eliminar'></span> Eliminar
                                    </button>
                                </form>
                                break;
                        }
                        break;
                }
            }
        </div>
    </div>

</div>
