@model Arysoft.ProyectoN.Models.Seccion

@using Arysoft.ProyectoN.Models;

@{
    bool esNuevo = Model.Status == StatusTipo.Ninguno;

    if (esNuevo)
    {
        ViewBag.Title = "Nueva sección";
    }
    else
    {
        ViewBag.Title = "Editar sección";
    }
}

<div class="container">
    <h2>Sección <small>@(esNuevo ? "NUEVA" : "EDITAR")</small></h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">            
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.SeccionID)
            @Html.HiddenFor(model => model.Status)
            @Html.HiddenFor(model => model.UserNameActualizacion)
            @Html.HiddenFor(model => model.FechaActualizacion)

            <div class="form-group">
                @Html.LabelFor(model => model.SectorID, "Sector", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("SectorID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SectorID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Numero, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Numero, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Numero, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Descripcion, 4, 0, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-4">
                    <strong>@Html.DisplayNameFor(model => model.UserNameActualizacion)</strong>
                    @Html.DisplayFor(model => model.UserNameActualizacion)
                    <br />
                    <strong>@Html.DisplayNameFor(model => model.FechaActualizacion)</strong>
                    @Html.DisplayFor(model => model.FechaActualizacion)
                </div>
                <div class="col-md-6 text-right">
                    @Html.Raw(
                             @Html.ActionLink("Cancelar", "Index", null, new { @class = "btn btn-default" }).ToHtmlString()
                             .Replace("Cancelar", "<span class='glyphicon glyphicon-remove' title='Cancelar cambios'></span> Cancelar")
                         )
                    <button type="submit" class="btn btn-primary">
                        <span class="glyphicon glyphicon-floppy-disk"></span>
                        Guardar
                    </button>
                </div>
            </div>
        </div>
    }

    <ul class="nav nav-tabs">
        <li class="active">
            <a href="#casillas" data-toggle="tab">
                <span class="glyphicon glyphicon-erase"></span>
                Casillas
                @if (Model.Casillas != null)
                {
                <span class="badge">@Model.Casillas.Count()</span>
                }
            </a>
        </li>
        <li>
            <a href="#colonias" data-toggle="tab">
                <span class="glyphicon glyphicon-home"></span>
                Colonias                
                <span class="badge">@Html.DisplayFor(model => model.Colonias.Count)</span>
            </a>
        </li>
        <li>
            <a href="#votantes" data-toggle="tab">
                <span class="glyphicon glyphicon-erase"></span>
                Votantes
                <span class="badge">@Html.DisplayFor(model => model.Personas.Count)</span>
            </a>
        </li>
    </ul>

    <div class="tab-content">
        <div class="tab-pane fade in active" name="casillas" id="casillas">
            <h4>Casillas</h4>

            <div id="listaCasillas" name="listaCasillas">
                @if (Model.Casillas != null)
                {
                @Html.Partial("_listaCasillas", Model)
                }
            </div>
        </div>

        <div class="tab-pane fade in" name="colonias" id="colonias">
            <h4>Colonias</h4>

            <div id="listaColonias" name="listaColonias">
                @if (Model.Colonias != null)
                {
                @Html.Partial("_listaColonias", Model)
                }
            </div>
        </div>

        <div class="tab-pane fade in" name="votantes" id="votantes">
            <h4>Votantes</h4>

            <div id="listaVotantes" name="listaVotantes" style="max-height: 800px; overflow-y: scroll;">
                @if (Model.Personas != null)
                {
                @Html.Partial("_listaVotantes", Model)
                }
            </div>
        </div>
    </div>

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
