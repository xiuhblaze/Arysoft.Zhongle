@model Seccion

@using Arysoft.ProyectoN.Models;

@{ 

    if (Model.Personas != null)
    {
        Model.Personas = Model.Personas.Where(p => p.Status == StatusTipo.Activo).OrderBy(p => p.NombreCompleto).ToList();
    }

}

@if (Model.Personas == null)
{
    <div class="text-muted">Sin votantes</div>
}
else
{

<div class="table-responsive">
        <table class="table table-hover">
            <thead>
                <tr>
                    <th>

                    </th>
                    <th>
                        Sección
                    </th>
                    <th>
                        Nombre completo
                    </th>

                    <th>
                        Brigada
                    </th>
                    <th>
                        Contacto
                    </th>
                    @if (!Model.SoloLectura)
                {
                    <th class="col-md-1"></th>
            }
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Personas)
                {
                    string rowClass = string.Empty;
                    string rowTitle = string.Empty;

                    string userClassColor = string.Empty;
                    string userTitle = string.Empty;

                    if (item.Status == StatusTipo.Baja)
                    {
                        rowClass = "class='text-muted'";
                        rowTitle = "title='La persona está dada de baja'";
                    }

                    switch (item.Afinidad)
                    {
                        case AfinidadTipo.Movilizador:
                        case AfinidadTipo.Simpatizante:
                            userClassColor = "text-warning";
                            break;
                        case AfinidadTipo.PorAfiliado:
                            userClassColor = "text-info";
                            break;
                        case AfinidadTipo.PorSector:
                            userClassColor = "text-primary";
                            break;                    
                        default:
                            userClassColor = "text-muted";
                            break;
                    }
                    userTitle = item.Afinidad.GetDisplayName();

                <tr @Html.Raw(rowClass) @Html.Raw(rowTitle)>
                    <td>
                        @if (item.Verificada == BoolTipo.Si)
                        {
                            <span class="glyphicon glyphicon-ok-sign glyphicon-table-action-size text-primary" title="Datos confiables"></span>
                        }
                        else
                        {
                            <span class="glyphicon glyphicon-question-sign glyphicon-table-action-size text-muted" title="Datos no verificados"></span>
                        }

                        <span class="glyphicon glyphicon-user @userClassColor" title="@userTitle"></span>

                        @if (item.VotanteSeguro == BoolTipo.Si)
                        {
                            <span class="glyphicon glyphicon-erase glyphicon-table-action-size text-success" title="Votante seguro"></span>
                        }
                        else
                        {
                            <span class="glyphicon glyphicon-erase glyphicon-table-action-size text-danger" title="Posiblemente votará por otro partido, ver historial de auditorias."></span>
                        }

                        @if (item.TieneBarda == BoolTipo.Si && item.TieneLona == BoolTipo.Si)
                        {
                            <span class="glyphicon glyphicon-tags glyphicon-table-action-size text-primary" title="Cuenta con barda y lona"></span>
                        }
                        else if (item.TieneBarda == BoolTipo.Si)
                        {
                            <span class="glyphicon glyphicon-tag glyphicon-table-action-size text-primary" title="Cuenta con barda"></span>
                        }
                        else if (item.TieneLona == BoolTipo.Si)
                        {
                            <span class="glyphicon glyphicon-tag glyphicon-table-action-size text-primary" title="Cuenta con lona"></span>
                        }
                        else
                        {
                            <span class="glyphicon glyphicon-tag glyphicon-table-action-size text-muted" title="Sin barda ni lona"></span>
                        }

                        @if (item.Notas.Count == 0)
                        {
                            <span class="glyphicon glyphicon-comment glyphicon-table-action-size text-muted" title="Sin comentarios"></span>
                        }
                        else
                        {
                            string notas = string.Empty;
                            foreach (Nota nota in item.Notas)
                            {
                                notas += nota.VistaAttrbTitle + "\n";
                            }
                            <span class="glyphicon glyphicon-comment glyphicon-table-action-size text-info" title="@notas"></span>
                        }
                    </td>
                    <td class="text-right" @*style="cursor: pointer" onclick="getPersonaDetails('@item.PersonaID')"*@>
                        <span class="label label-primary">
                            @Html.DisplayFor(modelItem => item.Seccion.Numero)
                        </span>
                    </td>
                    <td @*style="cursor: pointer" onclick="getPersonaDetails('@item.PersonaID')"*@>
                        <span class="@(item.EsResponsableSector ? "text-primary" : "")" title="@(item.EsResponsableSector ? "Responsable de sector" : "")">
                            @Html.DisplayFor(modelItem => item.NombreCompleto)
                        </span>
                        @if (item.Afinidad == AfinidadTipo.PorAfiliado || item.Afinidad == AfinidadTipo.PorSector)
                        {
                        <br />
                        <small class="text-muted" title="Promotor (invitado por)">
                            @Html.DisplayFor(modelItem => item.Promotor.NombreCompleto)
                        </small>
                        }
                    </td>
                    <td @*style="cursor: pointer" onclick="getPersonaDetails('@item.PersonaID')"*@>
                        @Html.DisplayFor(modelItem => item.Sector.Nombre)
                    </td>
                    <td @*style="cursor: pointer" onclick="getPersonaDetails('@item.PersonaID')"*@>
                        <span class="glyphicon glyphicon-phone-alt glyphicon-table-info-size"></span>
                        @Html.DisplayFor(modelItem => item.Telefono) <br />
                        <span class="glyphicon glyphicon-phone glyphicon-table-info-size"></span>
                        @Html.DisplayFor(modelItem => item.Celular) <br />
                        <div class="cortarEMail" title="@item.CorreoElectronico">
                            <span class="glyphicon glyphicon-envelope glyphicon-table-info-size"></span>
                            @Html.DisplayFor(modelItem => item.CorreoElectronico)
                        </div>
                    </td>
                    @if (!Model.SoloLectura)
                    {
                        <td class="text-right">
                        @if (item.Status == StatusTipo.Activo)
                        {
                            @Html.Raw(
                                @Html.ActionLink("Editar", "Edit", new { id = item.PersonaID }).ToHtmlString()
                                    .Replace("Editar", "<span class='glyphicon glyphicon-edit glyphicon-table-action-size' title='Editar'></span>")
                            )
                        }
                    </td>
                    }
                </tr>
                }
            </tbody>
        </table>
    </div>
}