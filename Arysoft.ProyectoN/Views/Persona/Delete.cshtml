@model Arysoft.ProyectoN.Models.Persona

@{
    ViewBag.Title = "Eliminar";

    var userClassColor = string.Empty;

    switch (Model.Afinidad)
    {
        case AfinidadTipo.Movilizador:
        case AfinidadTipo.Simpatizante:
            userClassColor = "text-warning";
            break;
        case AfinidadTipo.PorAfiliado:
            userClassColor = "text-info";
            break;
        case AfinidadTipo.PorSector:
            userClassColor = "text-primary";
            break;        
        default:
            userClassColor = "text-muted";
            break;
    }
}

<div class="container">

    @if (Model.Status == StatusTipo.Activo)
    {
        <h2>Dar de baja</h2>
    }
    else if (Model.Status == StatusTipo.Baja)
    {
        <h2>Eliminar persona</h2>
    }

    @if (Model.EsResponsableSector)
    {
        <h3>No se puede dar de baja una persona que es responsable de un sector</h3>
    }
    else
    {
        <h3>¿Estas seguro de realizar esto?</h3>
    }
    <div class="row">
        <div class="col-md-8">
            <h4 style="margin-top: 0;">
                <span class="glyphicon glyphicon-user @userClassColor" title="@Model.Afinidad.GetDisplayName()"></span>
                @Html.DisplayFor(model => model.NombreCompleto)
                @if (Model.Seccion != null)
                {
                    <small class="text-warning">SECCION @Model.Seccion.Numero</small>
                }
            </h4>

            <dl class="dl-horizontal">

                @if (Model.Afinidad == AfinidadTipo.PorSector || Model.Afinidad == AfinidadTipo.PorAfiliado)
                {
                    <dt>
                        Promotor
                    </dt>
                    <dd>
                        @if (Model.Promotor != null)
                        {
                            @Model.Promotor.NombreCompleto
                        }
                    </dd>
                }

                <dt>
                    Contacto
                </dt>

                <dd>
                    @if (!string.IsNullOrEmpty(Model.Telefono))
                    {
                        <span class="glyphicon glyphicon-phone-alt glyphicon-table-info-size"></span>
                        @Html.DisplayFor(model => model.Telefono)
                    }
                    @if (!string.IsNullOrEmpty(Model.Celular))
                    {
                        <span class="glyphicon glyphicon-phone glyphicon-table-info-size"></span>
                        @Html.DisplayFor(model => model.Celular)
                    }
                    @if (!string.IsNullOrEmpty(Model.CorreoElectronico))
                    {
                        <span class="glyphicon glyphicon-envelope glyphicon-table-info-size"></span>
                        @Html.DisplayFor(model => model.CorreoElectronico)
                    }

                </dd>

                <dt>Ubicación</dt>
                <dd>
                    <span class="glyphicon glyphicon-home glyphicon-table-info-size"></span>
                    <span>
                        @if (Model.UbicacionVive.Calle != null)
                        {<span>@Model.UbicacionVive.Calle.Nombre</span>}
                        @Model.UbicacionVive.NumExterior
                        @if (!string.IsNullOrEmpty(Model.UbicacionVive.Letra))
                        {<span>@Model.UbicacionVive.Letra</span>}
                        @if (!string.IsNullOrEmpty(Model.UbicacionVive.NumInterior))
                        {<span>@Model.UbicacionVive.NumInterior</span>}
                        @if (Model.UbicacionVive.Colonia != null)
                        {
                            @Model.UbicacionVive.Colonia.Nombre
                            <span>C.P.</span> @Model.UbicacionVive.Colonia.CodigoPostal
                        }
                        @if (!string.IsNullOrEmpty(Model.UbicacionVive.Descripcion))
                        {<br /><span class="text-muted">@Model.UbicacionVive.Descripcion</span>}
                    </span>
                    @if (Model.VotaEnDomicilio == BoolTipo.No)
                    {
                        <br />
                        <span class="text-warning" title="Domicilio donde vota">
                            <span class="glyphicon glyphicon-erase glyphicon-table-info-size"></span>
                            @if (Model.UbicacionVota != null)
                            {
                                <span>
                                    @if (Model.UbicacionVota.Calle != null)
                                    {<span>@Model.UbicacionVota.Calle.Nombre</span>}
                                    @Model.UbicacionVota.NumExterior
                                    @if (!string.IsNullOrEmpty(Model.UbicacionVota.Letra))
                                    {<span>item.UbicacionVota.Letra</span>}
                                    @if (!string.IsNullOrEmpty(Model.UbicacionVota.NumInterior))
                                    {<span>item.UbicacionVota.NumInterior</span>}
                                    @if (Model.UbicacionVota.Colonia != null)
                                    {
                                        @Model.UbicacionVota.Colonia.Nombre
                                        <span>C.P.</span> @Model.UbicacionVota.Colonia.CodigoPostal
                                    }
                                    @if (!string.IsNullOrEmpty(Model.UbicacionVota.Descripcion))
                                    {<br /><span class="text-muted">@Model.UbicacionVota.Descripcion</span>}
                                </span>
                            }
                        </span>
                    }
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Status)
                </dt>

                <dd>
                    @switch (Model.Status)
                    {
                        case StatusTipo.Activo:
                            <span class="label label-primary">
                                @Html.DisplayFor(model => model.Status)
                            </span>
                            break;
                        case StatusTipo.Baja:
                            <span class="label label-warning">
                                @Html.DisplayFor(model => model.Status)
                            </span>
                            break;
                        case StatusTipo.Eliminado:
                            <span class="label label-danger">
                                @Html.DisplayFor(model => model.Status)
                            </span>
                            break;
                    }

                </dd>
                <dt>Registro</dt>
                <dd>@Html.DisplayFor(model => model.FechaAlta)</dd>

            </dl>

        </div>
        <div class="col-md-4">
            @if (Model.VotanteSeguro == BoolTipo.Si)
            {
                <div class="alert alert-success text-center">
                    <span class="glyphicon glyphicon-erase"></span>
                    VOTANTE SEGURO
                </div>
            }
            else
            {
                <div class="alert alert-danger text-center">
                    <span class="glyphicon glyphicon-remove"></span>
                    VOTO NO SEGURO
                </div>
            }

            <div class="row">
                <div class="col-md-6">
                    @if (Model.TieneBarda == BoolTipo.Si)
                    {
                        <div class="alert alert-info text-center">
                            <span class="glyphicon glyphicon-ok"></span>
                            TIENE BARDA
                        </div>
                    }
                </div>
                <div class="col-md-6">
                    @if (Model.TieneLona == BoolTipo.Si)
                    {
                        <div class="alert alert-info text-center">
                            <span class="glyphicon glyphicon-ok"></span>
                            TIENE LONA
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-actions no-color text-right">
            @Html.Raw(
                @Html.ActionLink("Cancelar", "Index", null, new { @class = "btn btn-default" }).ToHtmlString()
                .Replace("Cancelar", "<span class='glyphicon glyphicon-remove' title='Cancelar cambios'></span> Cancelar")
            )

            @if (Model.EsResponsableSector)
            {
                <button type="submit" class="btn btn-danger" disabled title="No se puede dar de baja una persona que es responsable de un sector">
                    <span>
                        <span class="glyphicon glyphicon-thumbs-down"></span>
                        Dar de baja
                    </span>
                </button>
            }
            else
            {
                <button type="submit" class="btn btn-danger">
                    @if (Model.Status == StatusTipo.Activo)
                    {

                        <span>
                            <span class="glyphicon glyphicon-thumbs-down"></span>
                            Dar de baja
                        </span>
                    }
                    else if (Model.Status == StatusTipo.Baja)
                    {
                        <span>
                            <span class="glyphicon glyphicon-trash"></span>
                            Eliminar
                        </span>
                    }
                </button>
            }
        </div>
    }
</div>
