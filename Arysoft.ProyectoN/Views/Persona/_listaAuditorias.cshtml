@model Persona

@using Arysoft.ProyectoN.Models;

@{ 

    List<AuditoriaPersona> auditorias = new List<AuditoriaPersona>();

    if (Model.AuditoriasRealizadas != null)
    {
        auditorias = Model.AuditoriasRealizadas.Where(ap => ap.Auditoria.Status != AuditoriaStatusTipo.Ninguno).ToList();
    }

}

<div class="table-responsive">
    <table class="table table-hover">
        <thead>
            <tr>
                <th>

                </th>
                <th>
                    Folio
                </th>
                <th>
                    Nombre
                </th>
                <th>
                    Descripción
                </th>
                <th>
                    Realizada
                </th>
                <th>
                    Auditado
                </th>
                <th>
                    Votante seguro
                </th>
                <th>
                    Resultado
                </th>
                @if (!Model.SoloLectura)
                {
                    <th></th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var item in auditorias)
            {
                <tr>
                    <td>
                        @switch (item.Auditoria.Status)
                        {
                            case AuditoriaStatusTipo.Espera:
                                <span class="glyphicon glyphicon-time glyphicon-table-action-size text-warning" title="Auditoria en espera"></span>
                                break;
                            case AuditoriaStatusTipo.Realizada:
                                <span class="glyphicon glyphicon-ok-circle glyphicon-table-action-size text-success" title="Auditoria realizada"></span>
                                break;
                            case AuditoriaStatusTipo.Cancelada:
                                <span class="glyphicon glyphicon-ban-circle glyphicon-table-action-size text-danger" title="Auditoria cancelada"></span>
                                break;
                            case AuditoriaStatusTipo.Cerrada:
                                <span class="glyphicon glyphicon-lock glyphicon-table-action-size text-primary" title="Auditoria cerrada"></span>
                                break;
                        }

                        @if (item.Auditoria.Notas.Count == 0)
                        {
                            <span class="glyphicon glyphicon-comment glyphicon-table-action-size text-muted" title="Sin comentarios"></span>
                        }
                        else
                        {
                            string notas = string.Empty;
                            foreach (Nota nota in item.Auditoria.Notas.OrderByDescending(n => n.FechaPublicacion))
                            {
                                notas += nota.VistaAttrbTitle + "\n";
                            }
                            <span class="glyphicon glyphicon-comment glyphicon-table-action-size text-info" title="@notas"></span>
                        }
                    </td>
                    <td class="text-danger">
                        @Html.DisplayFor(modelItem => item.Auditoria.Folio)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Auditoria.Nombre)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Auditoria.Descripcion)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Auditoria.FechaRealizacion)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FechaAuditoria)<br />
                        @Html.DisplayFor(modelItem => item.Observaciones)
                    </td>
                    <td>
                        @if (item.VotanteSeguro == BoolTipo.Si)
                        {
                            <span class="label label-success">@Html.DisplayFor(modelItem => item.VotanteSeguro)</span>
                        }
                        else
                        {
                            <span class="label label-danger">@Html.DisplayFor(modelItem => item.VotanteSeguro)</span>
                        }
                    </td>
                    <td>
                        @switch (item.ResultadoTipo)
                        {
                            case AuditoriaResultadoTipo.Visitada:
                                <span class="label label-success">@item.ResultadoTipo.GetDisplayName()</span>
                                break;
                            case AuditoriaResultadoTipo.NoDomicilio:
                                <span class="label label-danger">@item.ResultadoTipo.GetDisplayName()</span>
                                break;
                            case AuditoriaResultadoTipo.NoEncontrado:
                                <span class="label label-info">@item.ResultadoTipo.GetDisplayName()</span>
                                break;
                            case AuditoriaResultadoTipo.NoViveNadie:
                                <span class="label label-warning">@item.ResultadoTipo.GetDisplayName()</span>
                                break;
                        }
                    </td>
                    <td class="text-right">
                        @if (item.Auditoria.Status == AuditoriaStatusTipo.Espera || item.Auditoria.Status == AuditoriaStatusTipo.Realizada)
                        {
                            @Html.Raw(
                                         @Html.ActionLink("Editar", "Edit", "Auditoria", new { id = item.AuditoriaID }, null).ToHtmlString()
                                             .Replace("Editar", "<span class='glyphicon glyphicon-edit glyphicon-table-action-size' title='Editar'></span>")
                                     )
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>