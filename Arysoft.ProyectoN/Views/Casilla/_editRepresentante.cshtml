@model Arysoft.ProyectoN.Models.Persona

@{ 
    bool esNuevo = Model.PersonaID == Guid.Empty;

    var tipoList = Enum.GetValues(typeof(RepresentanteTipo))
        .Cast<RepresentanteTipo>()
        .Select(e => new SelectListItem
        {
            Value = e.ToString(),
            Text = e == RepresentanteTipo.Ninguno ? "(tipo de representante)" : e.GetDisplayName(),
            Selected = esNuevo ? false : Model.RepresentanteTipo == e
        });
}

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
    <h4 class="modal-title">
        Representante casilla @Model.Casilla.Seccion.Numero @Model.Casilla.Tipo.GetDisplayName() <small>@(esNuevo ? "AGREGAR" : "EDITAR")</small>
    </h4>
</div>

<div class="modal-body">

    <div class="form-horizontal">
        @if (esNuevo)
        {
            <div class="form-group">
                <label class="control-label col-md-3" for="RepresentanteID">Representante</label>                
                <div class="col-md-9">
                    @Html.DropDownList("RepresentanteID", null, htmlAttributes: new { @class = "chosen-select" })                    
                </div>
            </div>
        }
        else
        {
            <div class="form-group">
                <label class="control-label col-md-3">Representante</label>
                <div class="col-md-9">
                    <input type="hidden" id="RepresentanteID" name="RepresentanteID" value="@Model.PersonaID" />
                    <p class="form-control-static">@Model.NombreCompleto</p>
                </div>
            </div>
        }

        <div class="form-group">
            <label class="control-label col-md-3" for="Tipo">Tipo</label>                
            <div class="col-md-9">
                @Html.DropDownList("RepresentanteTipo", tipoList, htmlAttributes: new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-3">Recibió capacitación</label>
            <div class="col-md-3">
                @if (Model.RepresentanteCapacitacion == BoolTipo.Si)
                {
                    <input type="checkbox" value="SI" id="tomoCapacitacionCheckbox" name="tomoCapacitacionCheckbox" data-reverse checked />
                }
                else
                {
                    <input type="checkbox" value="SI" id="tomoCapacitacionCheckbox" name="tomoCapacitacionCheckbox" data-reverse />
                }
                <input type="hidden" id="capacitacionHidden" value="@Model.RepresentanteCapacitacion" />
            </div>
            <label class="control-label col-md-3">Se presentó en la casilla</label>
            <div class="col-md-3">
                @if (Model.RepresentanteAsistencia == BoolTipo.Si)
                {
                    <input type="checkbox" value="SI" id="asistenciaCheckbox" name="asistenciaCheckbox" data-reverse checked />
                }
                else
                {
                    <input type="checkbox" value="SI" id="asistenciaCheckbox" name="asistenciaCheckbox" data-reverse />
                }
                <input type="hidden" id="asistenciaHidden" value="@Model.RepresentanteAsistencia" />
            </div>
        </div>

    </div>
</div>

<div class="modal-footer">
    <button type="button" class="btn btn-default" data-dismiss="modal">
        <span class="glyphicon glyphicon-remove"></span>
        Cancelar
    </button>
    <button id="representanteGuardarButton" type="button" class="btn btn-primary">
        <span class="glyphicon glyphicon-floppy-disk"></span>
        Guardar
    </button>
</div>

<script>

    $(document).ready(function () {

        setTimeout(function () {
            $('.chosen-select').chosen('destroy').chosen();
        }, 200);

        $('#tomoCapacitacionCheckbox, #asistenciaCheckbox').checkboxpicker({
            offLabel: 'no',
            onLabel: 'si'
        });

        $('#tomoCapacitacionCheckbox').on('change', function () {

            if ($(this).is(':checked')) {
                $('#capacitacionHidden').val('@BoolTipo.Si');
            }
            else {
                $('#capacitacionHidden').val('@BoolTipo.No');
            }
        }); // tomoCapacitacionCheckbox.Change

        $('#asistenciaCheckbox').on('change', function () {

            if ($(this).is(':checked')) {
                $('#asistenciaHidden').val('@BoolTipo.Si');
            }
            else {
                $('#asistenciaHidden').val('@BoolTipo.No');
            }
        }); // asistenciaCheckbox.Change

        $('#representanteGuardarButton').on('click', function () {      
            var representanteId = $('#RepresentanteID').val();
            var urlValidar = '@Url.Action("ComprobarRepresentante", "Casilla")/' + representanteId;
            
            $.ajax({
                cache: false,
                async: true,
                type: 'get',
                url: urlValidar,
                data: {},
                beforeSend: function () {

                },
                success: function (result) {
                    switch (result) {
                        case 'notid':
                            alert('No se recibió un identificador para validar.');
                            break;
                        case 'notfound':
                            alert('No se encontro información de esa persona');
                            break;
                        case 'available':
                            GuardarRepresentante();
                            break;
                        default:
                            var mensaje = 'La persona ya esta como representante en la casilla ' + result.Seccion + ' ' + result.CasillaTipo
                                + ', como representante ' + result.RepresentanteTipo + '.\n\n ¿Desea cambiarlo a esta casilla?';

                            if (confirm(mensaje)) {
                                GuardarRepresentante();
                            }
                            break;
                    }
                },
                error: function (xhr, status, error) {
                    alert('A ocurrido una excepción: ' + error);
                }
            });

        }); // representanteGuardarButton.click


    }); // document.ready

    function GuardarRepresentante() {
        var representanteId = $('#RepresentanteID').val();
        var representanteTipo = $('#RepresentanteTipo').val();
        var representanteCapacitacion = $('#capacitacionHidden').val();
        var representanteAsistencia = $('#asistenciaHidden').val();
        var casillaId = '@Model.CasillaID';

        var urlGuardar = '@Url.Action("EditRepresentante", "Casilla")';
        
        $.ajax({
            cache: false,
            async: true,
            type: 'post',
            url: urlGuardar,
            data: {
                id: representanteId,
                CasillaID: casillaId,
                tipo: representanteTipo,
                Capacitacion: representanteCapacitacion,
                Asistencia: representanteAsistencia
            },
            beforeSend: function () {
                $('#representanteGuardarButton').html('<span class="glyphicon glyphicon-time"></span> Guardando...');
            },
            success: function (vista) {
                switch (vista) {
                    case 'notid':
                        alert('No se recibió el identificador');
                        break;
                    case 'personanotfound':
                        alert('No se encontró la información de la persona');
                        break;
                    default:
                        $('#listaRepresentantes').html(vista);
                        $('#defaultModal').modal('hide');
                        break;
                }
            },
            error: function (xhr, status, error) {
                alert('A ocurrido una excepción: ' + error);
                $('#representanteGuardarButton').html('<span class="glyphicon glyphicon-floppy-disk"></span> Guardar');
            }
        });
    } // GuardarRepresentante

</script>