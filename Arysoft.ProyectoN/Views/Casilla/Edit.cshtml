@model Arysoft.ProyectoN.Models.CasillaEditModel

@using Arysoft.ProyectoN.Models;

@{
    bool esNuevo = Model.Status == StatusTipo.Ninguno;
    string titleSmall = "EDITAR";
    string panelClass = "panel panel-default";
    string panelTitle = Model.Status.ToString();

    if (esNuevo)
    {
        ViewBag.Title = "Nueva casilla";
        titleSmall = "NUEVA";
        panelClass = "panel panel-primary";
        panelTitle = "Nuevo registro";
    }
    else
    {
        ViewBag.Title = "Editar casilla";
    }

    switch (Model.Status)
    {
        case StatusTipo.Activo:
            panelClass = "panel panel-success";
            panelTitle = "Editar registro";
            break;
        case StatusTipo.Baja:
            panelClass = "panel panel-warning";
            panelTitle = "Registro dado de baja";
            break;
        case StatusTipo.Eliminado:
            panelClass = "panel panel-danger";
            panelTitle = "Registro eliminado";
            break;
    }
}

@section styles {

    <link href="~/Content/bootstrap-chosen.css" rel="stylesheet" />

}

<div id="defaultModal" class="modal fade" tabindex="-1" role="dialog" style="display: none;">
    <div class="modal-dialog modal-lg">
        <div class="modal-content" id="default-modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Casilla</h4>
            </div>
            <div id="default-modal-body"></div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<div id="notaModal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title"><span class="glyphicon glyphicon-comment"></span> Notas</h4>
            </div>
            <div class="modal-body">
                <div class="form-horizontal">
                    <div class="form-group">
                        <label for="notaTexto" class="control-label col-md-3 text-primary">Escribe una nota</label>
                        <div class="col-md-9">
                            <textarea class="form-control" id="notaTexto" name="notaTexto" rows="5"
                                      placeholder="Escribe la anotación para anexarla a la casilla"></textarea>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">
                    <span class="glyphicon glyphicon-remove"></span>
                    Cancelar
                </button>
                <button id="agregarNota" type="button" class="btn btn-primary">
                    <span class="glyphicon glyphicon-plus"></span>
                    Agregar
                </button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<div id="registrarVotosModal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title"><span class="glyphicon glyphicon-check"></span> Registrar votos</h4>
            </div>
            <div class="modal-body">
                <div class="form-horizontal">
                    <div class="form-group">
                        <label for="votosTexto" class="control-label col-md-3 text-primary">Números INE</label>
                        <div class="col-md-9">
                            <textarea class="form-control" id="votosTexto" name="votosTexto" rows="4"
                                      placeholder="215,569,145,136,48,6,644,..."></textarea>
                            <p class="help-block">Escribe los números INE de quienes votaron, separados por comas.</p>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">
                    <span class="glyphicon glyphicon-remove"></span>
                    Cancelar
                </button>
                <button id="agregarVotos" type="button" class="btn btn-primary">
                    <span class="glyphicon glyphicon-edit"></span>
                    Registrar
                </button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <h2>Casilla <small>@titleSmall</small></h2>
            <hr />
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                <div class="@panelClass">
                    <div class="panel-heading">
                        @Html.Raw(panelTitle)
                    </div>
                    <div class="panel-body">
                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.CasillaID)
                            @Html.HiddenFor(model => model.Status)
                            @Html.HiddenFor(model => model.UserNameActualizacion)
                            @Html.HiddenFor(model => model.FechaActualizacion)

                            <fieldset>
                                <legend>Datos de la casilla</legend>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.SeccionID, "Sección", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.DropDownList("SeccionID", null, htmlAttributes: new { @class = "chosen-select" })
                                        @Html.ValidationMessageFor(model => model.SeccionID, "", new { @class = "text-danger" })
                                    </div>

                                    @Html.LabelFor(model => model.Tipo, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.EnumDropDownListFor(model => model.Tipo, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Tipo, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.PersonaResponsableID, "Responsable", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("PersonaResponsableID", null, htmlAttributes: new { @class = "chosen-select" })
                                        @Html.ValidationMessageFor(model => model.PersonaResponsableID, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.NumeroVotantes, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.NumeroVotantes, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.NumeroVotantes, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                            </fieldset>

                            <fieldset>
                                <legend>Domicilio</legend>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.PersonaDuenno, htmlAttributes: new { @class = "control-label col-md-2", @placeHolder = "Nombre completo del dueño del domicilio" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.PersonaDuenno, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.PersonaDuenno, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.CalleID, "Calle", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.DropDownList("CalleID", null, htmlAttributes: new { @class = "chosen-select" })
                                        @Html.ValidationMessageFor(model => model.CalleID, "", new { @class = "text-danger" })
                                    </div>

                                    @Html.LabelFor(model => model.NumExterior, htmlAttributes: new { @class = "control-label col-md-1" })
                                    <div class="col-md-1">
                                        @Html.EditorFor(model => model.NumExterior, new { htmlAttributes = new { @class = "form-control text-right" } })
                                    </div>

                                    @Html.LabelFor(model => model.Letra, htmlAttributes: new { @class = "control-label col-md-1" })
                                    <div class="col-md-1">
                                        @Html.EditorFor(model => model.Letra, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>

                                    @Html.LabelFor(model => model.NumInterior, htmlAttributes: new { @class = "control-label col-md-1" })
                                    <div class="col-md-1">
                                        @Html.EditorFor(model => model.NumInterior, new { htmlAttributes = new { @class = "form-control text-right" } })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.ColoniaID, "Colonia", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("ColoniaID", null, htmlAttributes: new { @class = "chosen-select" })
                                        @Html.ValidationMessageFor(model => model.ColoniaID, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.TextAreaFor(model => model.Descripcion, 3, 0, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </fieldset>
                        </div>
                    </div>
                    <div class="panel-footer">
                        <div class="form-horizontal">
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-4">
                                    <strong>@Html.DisplayNameFor(model => model.UserNameActualizacion)</strong>
                                    @Html.DisplayFor(model => model.UserNameActualizacion)
                                    <br />
                                    <strong>@Html.DisplayNameFor(model => model.FechaActualizacion)</strong>
                                    @Html.DisplayFor(model => model.FechaActualizacion)
                                </div>
                                <div class="col-md-6 text-right">
                                    @Html.Raw(
                                        @Html.ActionLink("Cancelar", "Index", null, new { @class = "btn btn-default", @style = "margin-left: 10px;" }).ToHtmlString()
                                            .Replace("Cancelar", "<span class='glyphicon glyphicon-remove' title='Cancelar cambios'></span> Cancelar")
                                    )
                                    <button type="submit" class="btn btn-primary">
                                        <span class="glyphicon glyphicon-floppy-disk"></span>
                                        Guardar
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                
            }
        </div>
    </div>

    

    <ul class="nav nav-tabs">
        <li class="active">
            <a href="#votantes" data-toggle="tab">
                <span class="glyphicon glyphicon-user"></span>
                Votantes
                <span class="badge">@Html.DisplayFor(model => model.Votantes.Count)</span>
            </a>
        </li>

        <li>
            <a href="#representantes" data-toggle="tab">
                <span class="glyphicon glyphicon-user"></span>
                Representantes
                <span class="badge">@Html.DisplayFor(model => model.Representantes.Count)</span>
            </a>
        </li>

        <li>
            <a href="#notas" data-toggle="tab">
                <span class="glyphicon glyphicon-comment"></span>
                Notas
                <span class="badge">@Html.DisplayFor(model => model.Notas.Count)</span>
            </a>
        </li>

        <li>
            <a href="#bingo" data-toggle="tab">
                <span class="glyphicon glyphicon-check"></span>
                Bingo
            </a>
        </li>

        @*<li>
            <a href="#resultados" data-toggle="tab">
                <span class="glyphicon glyphicon-erase"></span>
                Resultados
            </a>
        </li>*@
    </ul>

    <div class="tab-content">
        <div class="tab-pane fade in active" name="votantes" id="votantes">
            <h4>Votantes <small>Personas simpatizantes</small></h4>

            <div class="form-inline">
                <div class="row">
                    <div class="col-md-6">
                        <button type="button" id="agregarVotantesModalButton" class="btn btn-default">
                            <span class="glyphicon glyphicon-user"></span>
                            Agregar votantes
                        </button>
                    </div>
                    <div class="col-md-6 text-right">
                        <div class="form-group">
                            <label for="buscarVotante" style="margin-right: 10px;"><span class="glyphicon glyphicon-search"></span></label>
                            <input type="text" id="buscarVotante" placeholder="Buscar..." class="form-control" />
                        </div>
                    </div>
                </div>
            </div>

            <div id="listaVotantes" name="listaVotantes" style="margin-top: 10px; max-height: 650px; overflow-y: scroll;">
                @Html.Partial("_listaVotantes", Model)
            </div>
        </div>

        <div class="tab-pane fade in" name="representantes" id="representantes">
            <h4>Representantes</h4>

            <button type="button" id="agregarRepresentanteModalButton" class="btn btn-default">
                <span class="glyphicon glyphicon-plus"></span>
                Agregar representante
            </button>

            <div id="listaRepresentantes" name="listaRepresentantes">
                @Html.Partial("_listaRepresentantes", Model)
            </div>
        </div>

        <div class="tab-pane fade in" name="notas" id="notas">
            <h4>Notas</h4>

            <button type="button" id="notaModalButton" name="notaModalButton"
                    class="btn btn-default" data-toggle="modal" data-target="#notaModal" title="Agregar nota">
                <span class="glyphicon glyphicon-plus"></span>
                Agregar nota
            </button>

            <div id="listaNotas" name="listaNotas" style="margin-top: 10px;">
                @Html.Partial("_listaNotas", Model.Notas)
            </div>
        </div>

        <div class="tab-pane fade in" name="bingo" id="bingo">
            <h4>Bingo</h4>

            <button type="button" id="bingoModalButton" name="bingoModalButton"
                    class="btn btn-default" data-toggle="modal" data-target="#registrarVotosModal" title="Registrar votos realizados">
                <span class="glyphicon glyphicon-check"></span>
                Registrar votos
            </button>

            <div class="btn-group">
                <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" data-submenu="" aria-haspopup="true" aria-expanded="false">
                    Acciones <span class="caret"></span>
                </button>
                <ul class="dropdown-menu">
                    <li>
                        <a href="javascript:void(0);" id="imprimirBingo">
                            <span class="glyphicon glyphicon-print"></span>
                            Imprimir Bingo
                        </a>
                    </li>
                    <li>
                        <a href="javascript:void(0);" id="exportarExcel">
                            <span class="glyphicon glyphicon-export"></span>
                            Exportar a Excel
                        </a>
                    </li>
                </ul>
            </div>

            <div id="listaBingo" name="listaBingo" style="margin-top: 10px; max-height: 650px; overflow-y: scroll;">
                @Html.Partial("_listaBingo", Model)
            </div>
        </div>

        @*<div class="tab-pane fade in" name="resultados" id="resultados">
            <h4>Resultados</h4>
            
            <div id="listaResultados" name="listaResultados">
            </div>

        </div>*@

    </div>

</div>


@section scripts {

    @Scripts.Render("~/bundles/jqueryval")

    <script src="~/Scripts/jquery.table2excel.js"></script>
    <script src="~/Scripts/chosen.jquery.min.js"></script>
    <script src="~/Scripts/bootstrap-checkbox.js"></script>
    <script src="~/Scripts/jquery.sortElements.js"></script>

    <script>

        var originalDefaultModalContent = $('#default-modal-content').html();

        $(document).ready(function () {

            $('.chosen-select').chosen();

            // VOTANTES

            $('#agregarVotantesModalButton').on('click', function () {
                var id = $('#CasillaID').val();
                var url = '@Url.Action("AgregarVotantes", "Casilla")/' + id;

                $('#defaultModal').modal('show');

                $.ajax({
                    cache: false,
                    async: true,
                    type: 'get',
                    url: url,
                    data: {},
                    beforeSend: function () {
                        $('#default-modal-body').html('<p class="text-center" style="margin: 50px;"><img src="@Url.Content("~/Images/ajax-loader.gif")" /></p>');
                    },
                    success: function (vista) {
                        $('#default-modal-content').html(vista);
                    },
                    error: function (xhr, status, error) {
                        alert('A ocurrido una excepción: ' + error);
                    }
                });
            });

            // REPRESENTANTES

            $('#agregarRepresentanteModalButton').on('click', function () {
                var url = '@Url.Action("EditRepresentante", "Casilla")/@Guid.Empty';
                var casillaId = $('#CasillaID').val();

                $('#defaultModal').modal('show');

                $.ajax({
                    cache: false,
                    async: true,
                    type: 'get',
                    url: url,
                    data: {
                        CasillaID: casillaId
                    },
                    beforeSend: function () {
                        $('#default-modal-body').html('<p class="text-center" style="margin: 50px;"><img src="@Url.Content("~/Images/ajax-loader.gif")" /></p>');
                    },
                    success: function (vista) {
                        switch (vista) {
                            case 'nocasilla':
                                alert('No se recibió el ID de la casilla a la cual asociar el representante.');
                                break;
                            case 'casillanotfound':
                                alert('No se encontró la casilla a la cual asociar el representante.');
                                break;
                            case 'notfound':
                                alert('El nombre del representante, no se encontró');
                                break;
                        }
                        $('#default-modal-content').html(vista);
                    },
                    error: function (xhr, status, error) {
                        alert('A ocurrido una excepción: ' + error);
                    }
                });
            });

            $('#defaultModal').on('hidden.bs.modal', function (e) {

                $('#default-modal-content').html(originalDefaultModalContent);
            })

            // NOTAS

            $('#notaModal').on('shown.bs.modal', function () {
                $('#notaTexto').focus();
            });

            $('#agregarNota').on('click', function () {
                var texto = $('#notaTexto').val();
                var id = $('#CasillaID').val();

                if (texto.length == 0) {
                    alert('No se ha especificado la nota.');
                    $('#notaTexto').focus();
                }
                else {
                    var url = '@Url.Action("AgregarNota", "Casilla")';
                    var tipo = '@PropietarioTipo.Casilla';

                    $.ajax({
                        cache: false,
                        async: true,
                        type: 'post',
                        url: url,
                        data: {
                            id: id,
                            texto: texto,
                            tipo: tipo
                        },
                        success: function (view) {
                            if (view.message != null) {
                                alert(view.message);
                            }
                            else {
                                $('#notaTexto').val('');
                                $('#listaNotas').html(view);
                                $('#notaModal').modal('hide');
                            }
                        },
                        error: function (xhr, status, error) {
                            alert('A ocurrido una excepción: ' + status + '\n error: ' + error);
                        }
                    });
                }
            });

            // TAB: BINGO - RESULTADOS

            $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
                var target = e.target + '';
                target = target.substring(target.indexOf("#") + 1);

                if (target == 'bingo') {
                    var id = $('#CasillaID').val();
                    var url = '@Url.Action("ObtenerBingo", "Casilla")/' + id;


                    $.ajax({
                        cache: false,
                        async: true,
                        type: 'get',
                        url: url,
                        data: {},
                        beforeSend: function () {
                            $('#listaBingo').html('<p class="text-center" style="margin: 50px;"><img src="@Url.Content("~/Images/ajax-loader.gif")" /></p>');
                        },
                        success: function (vista) {
                            switch (vista) {
                                case 'notid':
                                    alert('Se perdió el identificador de la casilla');
                                    break;
                                case 'notfound':
                                    alert('No se encontró el registro de la casilla');
                                    break;
                                default:
                                    $('#listaBingo').html(vista);
                                    break;
                            }
                        },
                        error: function (xhr, status, error) {
                            alert('A ocurrido una excepción: ' + error);
                        }
                    });
                }
                else if (target == 'resultados') {                    
                    @*var id = $('#CasillaID').val();
                    var url = '@Url.Action("ObtenerResultados", "Casilla")/' + id;

                    $.ajax({
                        cache: false,
                        async: true,
                        type: 'get',
                        url: url,
                        data: {},
                        beforeSend: function () {
                            $('#listaResultados').html('<p class="text-center" style="margin: 50px;"><img src="@Url.Content("~/Images/ajax-loader.gif")" /></p>');
                        },
                        success: function (vista) {
                            switch (vista) {
                                case 'notid':
                                    alert('Se perdió el identificador de la casilla');
                                    break;
                                case 'notfound':
                                    alert('No se encontró el registro de la casilla');
                                    break;
                                default:
                                    $('#listaResultados').html(vista);
                                    break;
                            }
                        },
                        error: function (xhr, status, error) {
                            alert('A ocurrido una excepción: ' + error);
                        }
                    });*@

                }
            });

            // BINGO

            $('#agregarVotos').on('click', function () {
                var url = '@Url.Action("RegistrarVotos", "Casilla")';
                var id = $('#CasillaID').val();
                var votos = $('#votosTexto').val();
                var hora = '@VotoHoraTipo.CincoSeis'; //TODO: CAMBIAR CORTE DE HORA BINGO !!!

                if (votos.length == 0) {
                    alert('No se ha registrado ningún número');
                }
                else {

                    $.ajax({
                        cache: false,
                        async: true,
                        type: 'post',
                        url: url,
                        data: {
                            id: id,
                            votos: votos,
                            hora: hora
                        },
                        success: function (vista) {
                            $('#votosTexto').val('');
                            $('#listaBingo').html(vista);
                            $('#registrarVotosModal').modal('hide');
                        },
                        error: function (xhr, status, error) {
                            alert('A ocurrido una excepción: ' + error);
                        }
                    });
                }
            });

            $('#exportarExcel').on('click', function () {
                var filename = 'Bingo @Model.Seccion.Numero @Model.Tipo.GetDisplayName()';
                var tempTable = $('#tableBingo').clone();

                tempTable.table2excel({
                    name: filename,
                    filename: filename
                });
            });

            $('#imprimirBingo').on('click', function () {
                var contenido = document.getElementById('listaBingo').innerHTML;
                //var contenidoOriginal = document.body.innerHTML;

                var windowModalPrint = window.open('', '', 'width=800, height=900');
                var windowDocument = windowModalPrint.document;

                windowDocument.open();
                windowDocument.write(contenido);
                windowDocument.close();

                windowModalPrint.focus();
                windowModalPrint.print();
                windowModalPrint.close();
            });

        }); // document.ready

        // VOTANTES

        function getVotanteDetails(id) {
            var url = '@Url.Action("Details", "Persona")/' + id;

            $('#defaultModal').modal('show');

            $.ajax({
                cache: false,
                async: true,
                type: 'get',
                url: url,
                data: {},
                beforeSend: function () {
                    $('#default-modal-body').html('<p class="text-center" style="margin: 50px;"><img src="@Url.Content("~/Images/ajax-loader.gif")" /></p>');
                },
                success: function (vista) {
                    switch (vista) {
                        case "noid":
                            alert('No se recibió un identificador de la persona');
                            $('#defaultModal').modal('hide');
                            $('#default-modal-content').html(originalDefaultModalContent);
                            break;
                        case "nofound":
                            alert('No se encontró la persona solicitada');
                            $('#defaultModal').modal('hide');
                            $('#default-modal-content').html(originalDefaultModalContent);
                            break;
                        default:
                            $('#default-modal-content').html(vista);
                            break;
                    }
                },
                error: function (xhr, status, error) {
                    alert('A ocurrido una excepción: ' + error);
                }
            });
        } // getVotanteDetails

        function removeVotante(id) {
            var url = '@Url.Action("RemoveVotante", "Casilla")/' + id;

            $.ajax({
                cache: false,
                async: true,
                type: 'get',
                url: url,
                data: {},
                beforeSend: function () {

                    return confirm("¿Desea quitar a esta persona de la casilla?");
                },
                success: function (vista) {
                    switch (vista) {
                        case 'notid':
                            alert('No se recibió el identificador');
                            break;
                        case 'notfound':
                            alert('No se encontró al votante');
                            break;
                        case 'nocasilla':
                            alert('No se encontró la casilla de la lista de votantes');
                            break
                        default:
                            $('#listaVotantes').html(vista);
                            break;
                    }
                },
                error: function (xhr, status, error) {
                    alert('A ocurrido una excepción: ' + error);
                }
            });
        } // removeVotante

        // REPRESENTANTES

        function getRepresentanteDetails(id) {
            var url = '@Url.Action("EditRepresentante", "Casilla")/' + id;

            $('#defaultModal').modal('show');

                $.ajax({
                    cache: false,
                    async: true,
                    type: 'get',
                    url: url,
                    data: {},
                    beforeSend: function () {
                        $('#default-modal-body').html('<p class="text-center" style="margin: 50px;"><img src="@Url.Content("~/Images/ajax-loader.gif")" /></p>');
                    },
                    success: function (vista) {
                        switch (vista) {
                            case 'nocasilla':
                                alert('No se recibió el ID de la casilla a la cual asociar el representante.');
                                break;
                            case 'casillanotfound':
                                alert('No se encontró la casilla a la cual asociar el representante.');
                                break;
                            case 'notfound':
                                alert('El nombre del representante, no se encontró');
                                break;
                            default:
                                $('#default-modal-content').html(vista);
                                break;
                        }
                    },
                    error: function (xhr, status, error) {
                        alert('A ocurrido una excepción: ' + error);
                    }
                });
        } // getRepresentanteDetails

        function removeRepresentante(id) {

            if (confirm('La persona va a ser removida como representante.\n\n¿Esta seguro?')) {
                var url = '@Url.Action("RemoveRepresentante", "Casilla")/' + id;

                $.ajax({
                    cache: false,
                    async: true,
                    type: 'get',
                    url: url,
                    data: {},
                    success: function (vista) {
                        switch (vista) {
                            case 'notid':
                                alert('No se recibió un identificador.');
                                break;
                            case 'notfound':
                                alert('No se encontró el registro del representante.');
                                break;
                            default:
                                $('#listaRepresentantes').html(vista);
                                break;
                        }
                    },
                    error: function (xhr, status, error) {
                        alert('A ocurrido una excepción: ' + error);
                    }
                });
            }

        } // removeRepresentante

    </script>
}