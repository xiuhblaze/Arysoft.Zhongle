@model Arysoft.ProyectoN.Models.Auditoria

@using Arysoft.ProyectoN.Models;

@{ 

    int countSinVisitar = Model.PersonasAuditadas.Where(p => p.ResultadoTipo == AuditoriaResultadoTipo.Ninguno).Count();
    int countNoDomicilio = Model.PersonasAuditadas.Where(p => p.ResultadoTipo == AuditoriaResultadoTipo.NoDomicilio).Count();
    int countNoEncontado = Model.PersonasAuditadas.Where(p => p.ResultadoTipo == AuditoriaResultadoTipo.NoEncontrado).Count();
    int countNoViveNadie = Model.PersonasAuditadas.Where(p => p.ResultadoTipo == AuditoriaResultadoTipo.NoViveNadie).Count();
    int countVisitada = Model.PersonasAuditadas.Where(p => p.ResultadoTipo == AuditoriaResultadoTipo.Visitada).Count();

}

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
    <h4 class="modal-title">
        Auditoria <small>DETALLES</small>
    </h4>
</div>

<div class="modal-body">

    <h4 style="margin-top: 0;"><span class="text-danger">@Html.DisplayFor(model => model.Folio)</span> @Html.DisplayFor(model => model.Nombre)</h4>
    <dl class="dl-horizontal">

        <dt>
            @Html.DisplayNameFor(model => model.Descripcion)
        </dt>

        <dd>
            <div class="well well-sm">
                @Html.DisplayFor(model => model.Descripcion)
            </div>
        </dd>

        <dt>
            Responsable
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Responsable.NombreCompleto)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.FechaRealizacion)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.FechaRealizacion)
        </dd>

        <dt>Resultados</dt>
        <dd>
            @if (countSinVisitar > 0)
            {
                <span class="label label-default" title="@countSinVisitar sin registrar visita">@countSinVisitar sin visitar</span>
            }
            @if (countVisitada > 0)
            {
                <span class="label label-success" title="@countVisitada personas visitadas">@countVisitada visitadas</span>
            }
            @if (countNoDomicilio > 0)
            {
                <span class="label label-danger" title="@countNoDomicilio no viven en ese domicilio">@countNoDomicilio @AuditoriaResultadoTipo.NoDomicilio.GetDisplayName()</span>
            }
            @if (countNoViveNadie > 0)
            {
                <span class="label label-warning" title="@countNoViveNadie no vive nadie">@countNoViveNadie @AuditoriaResultadoTipo.NoViveNadie.GetDisplayName()</span>
            }
            @if (countNoEncontado > 0)
            {
                <span class="label label-info" title="@countNoEncontado no se encontrarón">@countNoEncontado @AuditoriaResultadoTipo.NoEncontrado.GetDisplayName()</span>
            }
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Status)
        </dt>

        <dd>
            @switch (Model.Status)
            {
                case AuditoriaStatusTipo.Espera:
                    <span class="label label-warning" style="font-size: 100%;">
                        <span class="glyphicon glyphicon-time" title="Auditoria en espera"></span>
                        @Model.Status.GetDisplayName()
                    </span>
                    break;
                case AuditoriaStatusTipo.Realizada:
                    <span class="label label-success" style="font-size: 100%;">
                        <span class="glyphicon glyphicon-ok-circle" title="Auditoria realizada"></span>
                        @Model.Status.GetDisplayName()
                    </span>
                    break;
                case AuditoriaStatusTipo.Cancelada:
                    <span class="label label-danger" style="font-size: 100%;">
                        <span class="glyphicon glyphicon-ban-circle" title="Auditoria cancelada"></span>
                        @Model.Status.GetDisplayName()
                    </span>
                    break;
                case AuditoriaStatusTipo.Cerrada:
                    <span class="label label-info" style="font-size: 100%;">
                        <span class="glyphicon glyphicon-lock" title="Auditoria cerrada"></span>
                        @Model.Status.GetDisplayName()
                    </span>
                    break;
            }
        </dd>
    </dl>

    <ul class="nav nav-tabs">
        <li class="active">
            <a href="#personas" data-toggle="tab">
                <span class="glyphicon glyphicon-user"></span>
                Personas
                <span class="badge">@Html.DisplayFor(model => model.PersonasAuditadas.Count)</span>
            </a>
        </li>
        <li>
            <a href="#notas" data-toggle="tab">
                <span class="glyphicon glyphicon-comment"></span>
                Notas
                <span class="badge">@Html.DisplayFor(model => model.Notas.Count)</span>
            </a>
        </li>
    </ul>

    <div class="tab-content">
        <div class="tab-pane fade in active" name="personas" id="personas">
            <h4>Personas</h4>

            <div class="form-inline">
                <div class="text-right">
                    <div class="form-group">
                        <label for="buscarPersona" style="margin-right: 10px;"><span class="glyphicon glyphicon-search"></span></label>
                        <input type="text" id="buscarPersona" placeholder="Buscar..." class="form-control" />
                    </div>
                </div>
            </div>

            <div id="listaPersonas" name="listaPersonas" style="max-height: 300px; overflow-y:scroll;">
                @Html.Partial("_listaPersonas", Model)
            </div>
        </div>

        <div class="tab-pane fade in" name="notas" id="notas">
            <h4>Notas</h4>

            <div id="listaNotas" name="listaNotas" style="max-height: 300px; overflow-y:scroll;">
                @Html.Partial("_listaNotas", Model.Notas)
            </div>
        </div>
    </div>


</div>

<div class="modal-footer">
    <div class="row">
        <div class="col-md-8 text-left text-muted">
            <small>
                <strong>Actualizado por</strong> @Model.UserNameActualizacion |
                <strong>Última actualización</strong> @Model.FechaActualizacion.ToShortDateString()
            </small>
        </div>
        <div class="col-md-4 text-right">
            <button type="button" class="btn btn-default" data-dismiss="modal">
                <span class="glyphicon glyphicon-remove"></span>
                Cancelar
            </button>

            @switch (Model.Status)
            {
                case AuditoriaStatusTipo.Espera:
                case AuditoriaStatusTipo.Realizada:
                    @Html.Raw(
                        @Html.ActionLink("Editar", "Edit", new { id = Model.AuditoriaID }, new { @class = "btn btn-primary" }).ToHtmlString()
                            .Replace("Editar", "<span class='glyphicon glyphicon-edit' title='Editar'></span> Editar")
                    )
                    break;
                case AuditoriaStatusTipo.Cancelada:
                    @Html.Raw(
                        @Html.ActionLink("[activar]", "Activar", new { id = Model.AuditoriaID }, new { @class = "btn btn-success" }).ToHtmlString()
                            .Replace("[activar]", "<span class='glyphicon glyphicon-ok' title='Reactivar persona'></span> Reactivar")
                    )
                    break;
            }

        </div>
    </div>

</div>
