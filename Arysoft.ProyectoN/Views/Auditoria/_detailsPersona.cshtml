@model Arysoft.ProyectoN.Models.AuditoriaPersona

@{ 

    var userClassColor = string.Empty;
    string verificadaClassColor = "text-muted";
    string verificadaTitleText = "Información no verificada";
    DateTime fechaAuditoria = Model.FechaAuditoria ?? DateTime.MinValue;
    string fechaAuditoriaString = fechaAuditoria == DateTime.MinValue ? "" : fechaAuditoria.ToString("yyyy-MM-dd");

    switch (Model.Persona.Afinidad)
    {
        case AfinidadTipo.Movilizador:
        case AfinidadTipo.Simpatizante:
            userClassColor = "text-warning";
            break;
        case AfinidadTipo.PorAfiliado:
            userClassColor = "text-info";
            break;
        case AfinidadTipo.PorSector:
            userClassColor = "text-primary";
            break;
        default:
            userClassColor = "text-muted";
            break;
    }

    if (Model.Persona.Verificada == BoolTipo.Si)
    {
        verificadaClassColor = "text-primary";
        verificadaTitleText = "Información verificada";
    }

    var resultadoList = Enum.GetValues(typeof(AuditoriaResultadoTipo))
        .Cast<AuditoriaResultadoTipo>()
        .Select(e => new SelectListItem
        {
            Value = e.ToString(),
            Text = e.GetDisplayName(),
            Selected = e.ToString() == Model.ResultadoTipo.ToString()
        });
}

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
    <h4 class="modal-title">        
        @if (!string.IsNullOrEmpty(ViewBag.Url))
        {
            <a href="javascript:void(0);" onclick="getAuditoriaDetails('@Model.AuditoriaID');" title="Regresar a detalles de la auditoria"><span class="glyphicon glyphicon-circle-arrow-left"></span></a>
        }
        Auditoria <small>DETALLES DE LA PERSONA</small>
    </h4>
</div>

<div class="modal-body">

    <div class="row">
        <div class="col-md-8">
            <h4 style="margin-top: 0;">
                <span class="glyphicon glyphicon-ok-sign @verificadaClassColor" title="@verificadaTitleText"></span>
                <span class="glyphicon glyphicon-user @userClassColor" title="@Model.Persona.Afinidad.GetDisplayName()"></span>
                @Html.DisplayFor(model => model.Persona.NombreCompleto)
                <small class="text-warning">SECCION @Model.Persona.Seccion.Numero</small>
            </h4>

            <dl class="dl-horizontal">

                @if (Model.Persona.Afinidad == AfinidadTipo.PorSector || Model.Persona.Afinidad == AfinidadTipo.PorAfiliado)
                {
                    <dt>
                        Promotor
                    </dt>
                    <dd>
                        @if (Model.Persona.Promotor != null)
                        {
                            <span class="text-primary" style="cursor: pointer" onclick="getPersonaDetails('@Model.Persona.PersonaPromotorID')">@Model.Persona.Promotor.NombreCompleto</span>
                        }
                    </dd>
                }
                else if (Model.Persona.Afinidad == AfinidadTipo.Movilizador || Model.Persona.Afinidad == AfinidadTipo.Simpatizante)
                {
                    <dt>
                        Sector
                    </dt>
                    <dd>
                        @if (Model.Persona.Sector != null)
                        {
                            <span>@Model.Persona.Sector.Nombre @Html.Raw(Model.Persona.EsResponsableSector ? " - <span class='text-primary'>RESPONSABLE DEL SECTOR</span>" : "")</span>
                        }
                    </dd>
                }

                <dt>
                    Contacto
                </dt>

                <dd>
                    @if (!string.IsNullOrEmpty(Model.Persona.Telefono))
                    {
                        <span class="glyphicon glyphicon-phone-alt glyphicon-table-info-size"></span>
                        @Html.DisplayFor(model => model.Persona.Telefono)
                    }
                    @if (!string.IsNullOrEmpty(Model.Persona.Celular))
                    {
                        <span class="glyphicon glyphicon-phone glyphicon-table-info-size"></span>
                        @Html.DisplayFor(model => model.Persona.Celular)
                    }
                    @if (!string.IsNullOrEmpty(Model.Persona.CorreoElectronico))
                    {
                        <span class="glyphicon glyphicon-envelope glyphicon-table-info-size"></span>
                        @Html.DisplayFor(model => model.Persona.CorreoElectronico)
                    }
                </dd>

                <dt>Ubicación</dt>
                <dd>
                    <span class="glyphicon glyphicon-home glyphicon-table-info-size"></span>
                    <span>
                        @if (Model.Persona.UbicacionVive.Calle != null)
                        {<span>@Model.Persona.UbicacionVive.Calle.Nombre</span>}
                        @Model.Persona.UbicacionVive.NumExterior
                        @if (!string.IsNullOrEmpty(Model.Persona.UbicacionVive.Letra))
                        {<span>@Model.Persona.UbicacionVive.Letra</span>}
                        @if (!string.IsNullOrEmpty(Model.Persona.UbicacionVive.NumInterior))
                        {<span>@Model.Persona.UbicacionVive.NumInterior</span>}
                        @if (Model.Persona.UbicacionVive.Colonia != null)
                        {
                            @Model.Persona.UbicacionVive.Colonia.Nombre
                            <span>C.P.</span> @Model.Persona.UbicacionVive.Colonia.CodigoPostal
                        }
                        @if (!string.IsNullOrEmpty(Model.Persona.UbicacionVive.Descripcion))
                        {<br /><span class="text-muted">@Model.Persona.UbicacionVive.Descripcion</span>}
                    </span>
                    @if (Model.Persona.VotaEnDomicilio == BoolTipo.No)
                    {
                        <br />
                        <span class="text-warning" title="Domicilio donde vota">
                            <span class="glyphicon glyphicon-erase glyphicon-table-info-size"></span>
                            @if (Model.Persona.UbicacionVota != null)
                            {
                                <span>
                                    @if (Model.Persona.UbicacionVota.Calle != null)
                                    {<span>@Model.Persona.UbicacionVota.Calle.Nombre</span>}
                                    @Model.Persona.UbicacionVota.NumExterior
                                    @if (!string.IsNullOrEmpty(Model.Persona.UbicacionVota.Letra))
                                    {<span>item.UbicacionVota.Letra</span>}
                                    @if (!string.IsNullOrEmpty(Model.Persona.UbicacionVota.NumInterior))
                                    {<span>item.UbicacionVota.NumInterior</span>}
                                    @if (Model.Persona.UbicacionVota.Colonia != null)
                                    {
                                        @Model.Persona.UbicacionVota.Colonia.Nombre
                                        <span>C.P.</span> @Model.Persona.UbicacionVota.Colonia.CodigoPostal
                                    }
                                    @if (!string.IsNullOrEmpty(Model.Persona.UbicacionVota.Descripcion))
                                    {<br /><span class="text-muted">@Model.Persona.UbicacionVota.Descripcion</span>}
                                </span>
                            }
                        </span>
                    }
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Persona.Status)
                </dt>

                <dd>
                    @switch (Model.Persona.Status)
                    {
                        case StatusTipo.Activo:
                            <span class="label label-primary">
                                @Html.DisplayFor(model => model.Persona.Status)
                            </span>
                            break;
                        case StatusTipo.Baja:
                            <span class="label label-warning">
                                @Html.DisplayFor(model => model.Persona.Status)
                            </span>
                            break;
                        case StatusTipo.Eliminado:
                            <span class="label label-danger">
                                @Html.DisplayFor(model => model.Persona.Status)
                            </span>
                            break;
                    }
                </dd>
                <dt>Registrado el</dt>
                <dd>@Html.DisplayFor(model => model.Persona.FechaAlta)</dd>

                @if (Model.SoloLectura)
                {
                    <dt>
                        @Html.DisplayNameFor(model => model.FechaAuditoria)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.FechaAuditoria)
                    </dd>
                    <dt>
                        Voto marcado como
                    </dt>
                    <dd>
                        @if (Model.VotanteSeguro == BoolTipo.Si)
                        {
                            <span class="label label-success">Votante seguro</span>
                        }
                        else
                        {
                            <span class="label label-danger">No seguro</span>
                        }
                    </dd>
                    <dt>Resultado</dt>
                    <dd>
                        @switch (Model.ResultadoTipo)
                        {
                            case AuditoriaResultadoTipo.Visitada:
                                <span class="label label-success">@Model.ResultadoTipo.GetDisplayName()</span>
                                break;
                            case AuditoriaResultadoTipo.NoDomicilio:
                                <span class="label label-danger">@Model.ResultadoTipo.GetDisplayName()</span>
                                break;
                            case AuditoriaResultadoTipo.NoEncontrado:
                                <span class="label label-warning">@Model.ResultadoTipo.GetDisplayName()</span>
                                break;
                            case AuditoriaResultadoTipo.NoViveNadie:
                                <span class="label label-warning">@Model.ResultadoTipo.GetDisplayName()</span>
                                break;
                        }
                    </dd>
                    <dt>Observaciones</dt>
                    <dd>
                        <div class="well">
                            @Html.DisplayFor(model => model.Observaciones)
                        </div>
                    </dd>                    
                }

            </dl>

        </div>
        <div class="col-md-4">
            @if (Model.VotanteSeguro == BoolTipo.Si)
            {
                <div class="alert alert-success text-center">
                    <span class="glyphicon glyphicon-erase"></span>
                    VOTANTE SEGURO
                </div>
            }
            else
            {
                <div class="alert alert-danger text-center">
                    <span class="glyphicon glyphicon-remove"></span>
                    VOTO NO SEGURO

                </div>
            }

            <div class="row">
                <div class="col-md-6">
                    @if (Model.Persona.TieneBarda == BoolTipo.Si)
                    {
                        <div class="alert alert-info text-center">
                            <span class="glyphicon glyphicon-ok"></span>
                            TIENE BARDA
                        </div>
                    }
                </div>
                <div class="col-md-6">
                    @if (Model.Persona.TieneLona == BoolTipo.Si)
                    {
                        <div class="alert alert-info text-center">
                            <span class="glyphicon glyphicon-ok"></span>
                            TIENE LONA
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    @if (!Model.SoloLectura)
    {
        <div class="well">
            <div class="form-horizontal">
                <div class="form-group">
                    <label class="col-md-3 control-label">Auditoria realizada el</label>
                    <div class="col-md-3">
                        <input type="date" id="auditoriaPersonaFecha" name="auditoriaPersonaFecha" class="form-control" placeholder="dd/mm/aaaa" value="@fechaAuditoriaString" />
                    </div>
                    <label class="col-md-3 control-label">Sigue siendo votante seguro?</label>
                    <div class="col-md-3">
                        @if (Model.VotanteSeguro == BoolTipo.Si)
                        {
                            <input type="checkbox" value="SI" id="auditoriaPersonaVotanteSeguro" name="auditoriaPersonaVotanteSeguro" data-reverse checked />
                        }
                        else
                        {
                            <input type="checkbox" value="NO" id="auditoriaPersonaVotanteSeguro" name="auditoriaPersonaVotanteSeguro" data-reverse />
                        }
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-3 control-label">Resultado</label>
                    <div class="col-md-9">
                        @Html.DropDownList("resultado", resultadoList, htmlAttributes: new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-3 control-label">Observaciones</label>
                    <div class="col-md-9">
                        <textarea id="auditoriaPersonaObservaciones" name="auditoriaPersonaObservaciones" class="form-control" placeholder="Comentarios particulares a esta persona auditada">@Model.Observaciones</textarea>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<div class="modal-footer">
    <div class="row">
        <div class="col-md-8 text-left text-muted">
            <small>
                <strong>Actualizado por</strong> @Model.UserNameActualizacion |
                <strong>Última actualización</strong> @Model.FechaActualizacion.ToShortDateString()
            </small>
        </div>
        <div class="col-md-4 text-right">
            @if (!string.IsNullOrEmpty(ViewBag.Url))
            {
                <a href="javascript:void(0);" onclick="getAuditoriaDetails('@Model.AuditoriaID');" class="btn btn-default" title="Regresar a detalles de la auditoria">
                    <span class="glyphicon glyphicon-circle-arrow-left"></span>
                    Regresar
                </a>
            }
            <button type="button" class="btn btn-default" data-dismiss="modal">
                <span class="glyphicon glyphicon-remove"></span>
                Cancelar
            </button>
            @if (!Model.SoloLectura)
            {
                switch (Model.Auditoria.Status)
                {
                    case AuditoriaStatusTipo.Espera:
                    case AuditoriaStatusTipo.Realizada:
                        <button id="auditoriaPersonaGuardarButton" name="auditoriaPersonaGuardarButton" class="btn btn-primary">
                            <span class="glyphicon glyphicon-floppy-disk" title="Guardar"></span>
                            Guardar
                        </button>
                        break;
                }
            }
        </div>
    </div>
</div>

<script>

    $(document).ready(function () {

        @if (!Model.SoloLectura)
        {
            <text>
            $('#auditoriaPersonaVotanteSeguro').checkboxpicker({
                offLabel: 'no',
                onLabel: 'si'
            });
            </text>
        }
         
        $('#auditoriaPersonaGuardarButton').on('click', function () {
            var url = '@Url.Action("EditarPersona", "Auditoria")';
            var id = '@Model.AuditoriaPersonaID.ToString()';
            var observaciones = $('#auditoriaPersonaObservaciones').val();
            var fecha = $('#auditoriaPersonaFecha').val();
            var votanteSeguro = $('#auditoriaPersonaVotanteSeguro').is(':checked') ? '@BoolTipo.Si' : '@BoolTipo.No';
            var resultado = $('#resultado').val();

            //TODO: Validar que vayan todos los datos

            $.ajax({
                cache: false,
                async: true,
                type: 'post',
                url: url,
                data: {
                    id: id,
                    observaciones: observaciones,
                    votanteSeguro: votanteSeguro,
                    fecha: fecha,
                    resultado: resultado
                },
                beforeSend: function() {
                    $('#auditoriaPersonaGuardarButton').html('<span class="glyphicon glyphicon-floppy-disk" title="Guardando cambios"></span> Guardando...');
                },
                success: function (vista) {
                    switch (vista) {
                        case "notid":
                            alert('No se recibió un identificador de la persona');
                            $('#auditoriaPersonaGuardarButton').html('<span class="glyphicon glyphicon-floppy-disk" title="Guardar"></span> Guardar');
                            break;
                        case "notfound":
                            alert('No se encontró la persona asociada a la auditoria solicitada');
                            $('#auditoriaPersonaGuardarButton').html('<span class="glyphicon glyphicon-floppy-disk" title="Guardar"></span> Guardar');
                            break;
                        default:
                            $('#listaPersonas').html(vista);
                            $('#detailsModal').modal('hide');
                            break;
                    }                    
                },
                error: function (xhr, status, error) {
                    alert('A ocurrido una excepción: ' + error);
                    $('#auditoriaPersonaGuardarButton').html('<span class="glyphicon glyphicon-floppy-disk" title="Guardar"></span> Guardar');
                }
            });

        }); // auditoriaPersonaGuardarButton.click

    }); // document.ready

</script>