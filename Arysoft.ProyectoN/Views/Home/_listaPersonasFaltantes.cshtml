@model CasillaEditModel

@using Arysoft.ProyectoN.Models;

@{ 

    var votantes = Model.Votantes.Where(v => v.Persona != null && v.YaVoto != BoolTipo.Si).ToList();

    votantes = votantes
        .Where(v => v.Persona.Status == StatusTipo.Activo && v.Persona.VotanteSeguro == BoolTipo.Si)
        .ToList();

    if (votantes != null)
    {
        votantes = votantes
            .OrderBy(v => v.Persona.ApellidoPaterno)
            .ThenBy(v => v.Persona.ApellidoMaterno).ToList();
    }

}

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
    <h4 class="modal-title">Personas faltantes - Casilla @Model.Seccion.Numero <small>@Model.Tipo.GetDisplayName()</small></h4>
</div>
<div class="modal-body" id="default-modal-body">
    <div id="listaPersonas" name="listaPersonas">
        
        <div class="table-responsive">
            <div style="max-height: 700px; overflow-y: scroll;">
                <table id="tableToExcel" class="table table-bordered table-condensed">
                    <thead>
                        <tr>
                            <th>Sector</th>
                            <th>Sección</th>
                            <th>Casilla</th>
                            <th id="colNoIne">No. INE</th>
                            <th>Nombres</th>
                            <th id="colApellidoPaterno">Apellido Paterno</th>
                            <th>Apellido Materno</th>
                            <th>Votante seguro</th>
                            <th id="colCalle">Domicilio vive</th>
                            <th id="colColonia">Colonia</th>
                            <th>Descripción</th>
                            <th>Domicilio vota</th>
                            <th>Colonia vota</th>
                            <th>Descripción vota</th>
                            <th>Teléfono</th>
                            <th>Celular</th>                            
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var myitem in votantes)
                        {
                            var item = myitem.Persona;

                            string rowClass = string.Empty;
                            string rowTitle = string.Empty;

                            string userClassColor = string.Empty;
                            string userTitle = string.Empty;

                            //if (item.Status == StatusTipo.Baja)
                            //{
                            //    rowClass = "class='text-muted'";
                            //    rowTitle = "title='La persona está dada de baja'";
                            //}


                        <tr @Html.Raw(rowClass) @Html.Raw(rowTitle)>
                            <td>
                                @Html.DisplayFor(modelItem => item.Seccion.Sector.Nombre)
                            </td>
                            <td class="text-right">
                                @Html.DisplayFor(modelItem => item.Seccion.Numero)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Voto.Casilla.Tipo)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Voto.NumeroINE)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Nombres)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ApellidoPaterno)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ApellidoMaterno)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.VotanteSeguro)
                            </td>
                           

                            <td>
                                @if (item.UbicacionVive != null)
        {
                        <span>
                            @if (item.UbicacionVive.Calle != null)
    {<span>@item.UbicacionVive.Calle.Nombre</span>}
                            @item.UbicacionVive.NumExterior
                            @if (!string.IsNullOrEmpty(item.UbicacionVive.Letra))
    {<span>@item.UbicacionVive.Letra</span>}
                            @if (!string.IsNullOrEmpty(item.UbicacionVive.NumInterior))
    {<span>@item.UbicacionVive.NumInterior</span>}
                        </span>
}
                            </td>
                            <td>
                                @if (item.UbicacionVive != null)
        {
            if (item.UbicacionVive.Colonia != null)
            {
                        @Html.DisplayFor(modelItem => item.UbicacionVive.Colonia.Nombre)
                        <span>C.P.</span> @item.UbicacionVive.Colonia.CodigoPostal
}
}
                            </td>
                            <td>
                                @if (item.UbicacionVive != null)
        {
                        @Html.DisplayFor(modelItem => item.UbicacionVive.Descripcion)
}
                            </td>
                            <td>
                                @if (item.VotaEnDomicilio == BoolTipo.No)
        {
            if (item.UbicacionVota != null)
            {
                        <span>
                            @if (item.UbicacionVota.Calle != null)
    {<span>@item.UbicacionVota.Calle.Nombre</span>}
                            @item.UbicacionVota.NumExterior
                            @if (!string.IsNullOrEmpty(item.UbicacionVota.Letra))
    {<span>@item.UbicacionVota.Letra</span>}
                            @if (!string.IsNullOrEmpty(item.UbicacionVota.NumInterior))
    {<span>@item.UbicacionVota.NumInterior</span>}
                        </span>
}
}
                            </td>
                            <td>
                                @if (item.VotaEnDomicilio == BoolTipo.No)
        {
            if (item.UbicacionVota != null)
            {
                if (item.UbicacionVota.Colonia != null)
                {
                        @Html.DisplayFor(modelItem => item.UbicacionVota.Colonia.Nombre)
                        <span>C.P.</span> @item.UbicacionVota.Colonia.CodigoPostal
}
}
}
                            </td>
                            <td>
                                @if (item.VotaEnDomicilio == BoolTipo.No)
        {
            if (item.UbicacionVota != null)
            {
                        @Html.DisplayFor(modelItem => item.UbicacionVota.Descripcion)
}
}
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Telefono)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Celular)
                            </td>
                        </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

    </div>
</div>
<div class="modal-footer">
    <button type="button" class="btn btn-primary" id="exportarExcel">
        <span class="glyphicon glyphicon-export"></span>
        Exportar a Excel
    </button>
    <button type="button" class="btn btn-default" data-dismiss="modal">
        <span class="glyphicon glyphicon-remove"></span>
        Cerrar
    </button>
</div>

<script>

    $(document).ready(function () {

        $('#imprimirBingo').on('click', function () {
            var contenido = document.getElementById('listaBingo').innerHTML;
            var windowModalPrint = window.open('', '', 'width=800, height=900');
            var windowDocument = windowModalPrint.document;

            windowDocument.open();
            windowDocument.write(contenido);
            windowDocument.close();

            windowModalPrint.focus();
            windowModalPrint.print();
            windowModalPrint.close();
        });

        $('#exportarExcel').on('click', function () {
            $('#tableToExcel').table2excel({
                name: 'Personas',
                filename: 'Listado personas faltantes'
            });
        });

        var tablaVotantes = $('#tableToExcel');

        $('#colNoIne, #colApellidoPaterno, #colCalle, #colColonia')
            .wrapInner('<span title="Ordenar por esta columna" class="text-primary" style="cursor: pointer;" />')
            .each(function () {
                var th = $(this);
                var thIndex = th.index();
                var inverse = false;

                th.click(function () {

                    tablaVotantes.find('td').filter(function () {
                        return $(this).index() === thIndex;
                    }).sortElements(function (a, b) {
                        return $.text([a]) > $.text([b]) ?
                            inverse ? -1 : 1
                            : inverse ? 1 : -1;
                    }, function () {
                        return this.parentNode;
                    });
                    inverse = !inverse;
                });
            });

    });


</script>