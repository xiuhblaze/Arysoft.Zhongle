@{
    ViewBag.Title = "Ciudadanos";
}

@section styles {

    <link href="~/Content/bootstrap-chosen.css" rel="stylesheet" />

}

<div id="defaultModal" class="modal fade" tabindex="-1" role="dialog" style="display: none;">
    <div class="modal-dialog modal-lg">
        <div class="modal-content" id="default-modal-content">

            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Ciudadanos</h4>
            </div>
            <div class="modal-body" id="default-modal-body"></div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">
                    <span class="glyphicon glyphicon-remove"></span>
                    Cerrar
                </button>
            </div>

        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<div class="container">

    <div class="row title-count">

        <div class="col-md-2 col-sm-4 col-xs-6 title-stats-count">
            <span class="count-top">
                Simpatizantes de 1x10
            </span>
            <div class="count" id="personas1x10DIV">
                0%
            </div>
            <span class="count-bottom text-info" id="totalMovilizadoresDIV">
                De 0 movilizadores
            </span>
        </div>

        <div class="col-md-2 col-sm-4 col-xs-6 title-stats-count">
            <span class="count-top">
                Votantes Seguros
            </span>
            <div class="count" id="totalVotantesSegurosDIV">
                0
            </div>
            <span class="count-bottom text-info" id="porcentajeVotantesSegurosSPAN">
                0% de avance
            </span>
        </div>

        <div class="col-md-2 col-sm-4 col-xs-6 title-stats-count">
            <span class="count-top">
                Faltán para la meta
            </span>
            <div class="count text-warning" id="totalFaltanDIV">
                -
            </div>
            <span class="count-bottom">
                Votantes seguros
            </span>
        </div>

        <div class="col-md-2 col-sm-4 col-xs-6 title-stats-count">
            <span class="count-top">
                Casillas
            </span>
            <div class="count" id="totalCasillasDIV">
                0
            </div>
            <span class="count-bottom" id="totalSeccionesSPAN">

            </span>
        </div>

        <div class="col-md-2 col-sm-4 col-xs-6 title-stats-count">
            <span class="count-top">
                Faltán para cierre de registros
            </span>
            <div class="count" id="totalSemanasDIV">
                0
            </div>
            <span class="count-bottom">
                Días (2/Jun)
            </span>
        </div>

        <div class="col-md-2 col-sm-4 col-xs-6 title-stats-count">
            <span class="count-top">
                Faltán
            </span>
            <div class="count" id="totalAuditoriasDIV">
                0
            </div>
            <span class="count-bottom" id="totalAuditoriasSPAN">
                Días para las votaciones
            </span>
        </div>

    </div>

    <div class="row">
        <div class="col-md-4">
            <div class="">
                <div id="votosRealizados" style="width: 100%; height: 300px;"></div>
            </div>
        </div>
        <div class="col-md-8">
            <div class="">
                <div id="votosPorSector" style="width: 100%; height: 300px;"></div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="row">
                <div class="col-md-12">
                    <h4>Total de votos por hora</h4>
                    <div id="votosPorHora" style="width: 100%; height: 240px;"></div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <h4>Resultados generales</h4>
                    <div id="resutaldosGenerales" style="width: 100%; height: 240px;"></div>
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="row">
                <div class="col-md-12">
                    <h4>Votos por casilla</h4>
                    <div class="form-inline">
                        <div class="form-group">
                            <label for="SeccionID">Sección</label>
                            @Html.DropDownList("SeccionID", null, htmlAttributes: new { @class = "chosen-select" })
                        </div>
                        <div class="form-group" id="votosCasillaList" style="display: none;">
                            <label for="CasillaID">Casilla</label>
                            <select id="CasillaID" class="form-control"></select>
                        </div>

                        <div class="btn-group" id="votosCasillaAcciones" style="display: none;">
                            <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                Más Acciones <span class="caret"></span>
                            </button>
                            <ul class="dropdown-menu">
                                <li><a href="javascript:void(0);" onclick="CasillaBingo();">Bingo</a></li>
                                <li><a href="javascript:void(0);" onclick="CasillaFaltantes();">Listado votantes faltantes</a></li>
                            </ul>
                        </div>

                    </div>
                    <div id="votosPorCasilla" style="width: 100%; height: 200px;"></div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <h4>Resultados por casilla</h4>
                    <div id="resultadosPorCasilla" style="width: 100%; height: 240px;"></div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <h3>Votos Meta VS Alcanzados y Trabajados</h3>
            <div id="votantesMetaAlcanzados" style="width: 100%; height: 500px;"></div>

            <h3>Votantes por Sector</h3>
            <div id="votantesSectorTodos" style="width: 100%; height: 500px;"></div>
        </div>
    </div>

</div>

@section Scripts {

    <script type="text/javascript" src="http://maps.google.com/maps/api/js?key=AIzaSyBDco6aJ-bt-hA550oBARtMj5lEzpylhSU&sensor=false"></script>
    <script type="text/javascript" src="http://google-maps-utility-library-v3.googlecode.com/svn/trunk/infobox/src/infobox.js"></script>

    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

    <script src="~/Scripts/chosen.jquery.min.js"></script>
    <script src="~/Scripts/jquery.table2excel.js"></script>
    <script src="~/Scripts/jquery.sortElements.js"></script>

    <script>

        var idCasillaActiva = '';
        var originalDefaulModalContent = $('#default-modal-content').html();

        google.charts.load('current', { 'packages': ['corechart', 'bar'] });

        google.charts.setOnLoadCallback(VotantesPorSectorTodos);
        google.charts.setOnLoadCallback(VotantesMetaVSAlcanzados);

        // - Para el día D
        google.charts.setOnLoadCallback(VotosRealizados);
        google.charts.setOnLoadCallback(VotosRealizadosPorSector);
        google.charts.setOnLoadCallback(ResultadosTotales);

        $(function () {

            $('.chosen-select').chosen();


            // Cambiar el número de casillas de acuerdo a la sección seleccionada
            $('#SeccionID').on('change', function () {

                if ($(this).val() == '00000000-0000-0000-0000-000000000000') {
                    $('#CasillaID').empty();
                    $('#votosCasillaList').attr('style', 'display: none;');
                    $('#votosCasillaAcciones').attr('style', 'display: none;');
                    idCasillaActiva = '';
                }
                else {
                    var url = '@Url.Action("BuscarCasillasXSeccion", "Casilla")/' + $(this).val();

                    $.ajax({
                        cache: false,
                        async: true,
                        type: 'get',
                        url: url,
                        data: {},
                        success: function (datos) {

                            if (datos.message == null || datos.message == undefined) {

                                $('#CasillaID').empty();
                                $('#CasillaID').append('<option value="00000000-0000-0000-0000-000000000000">(seleccionar)</option>');

                                $.each(datos.Casillas, function (index, item) {
                                    var tipo = ObtenerNombreCasillaTipo(item.Tipo);
                                    var opcion = $('<option>', { value: item.ID }).text(tipo);

                                    $('#CasillaID').append(opcion);
                                });

                                $('#votosCasillaList').removeAttr('style');
                            }
                            else {
                                if (datos.message == 'notid') {
                                    alert('Se perdió el identificador de la sección');
                                }

                                $('#votosCasillaList').attr('style', 'display: none;');
                                $('#votosCasillaAcciones').attr('style', 'display: none;');
                                idCasillaActiva = '';
                            }
                        },
                        error: function (xhr, status, error) {
                            alert('A ocurrido una excepción, error: ' + error);
                            $('#votosCasillaList').attr('style', 'display: none;');
                            $('#votosCasillaAcciones').attr('style', 'display: none;');
                            idCasillaActiva = '';
                        }
                    });

                }

            }); // SeccionID.Change


            $('#CasillaID').on('change', function () {

                if ($(this).val() == '00000000-0000-0000-0000-000000000000') {
                    $('#votosCasillaAcciones').attr('style', 'display: none;');
                    $('#votosPorCasilla').html('');
                    $('#resultadosPorCasilla').html('');
                    idCasillaActiva = '';
                }
                else {
                    VotosCasillaPorHora($(this).val());
                    ResultadosPorCasilla($(this).val());
                    idCasillaActiva = $(this).val();
                    $('#votosCasillaAcciones').removeAttr('style');
                }
            });

            $('#defaultModal').on('hidden.bs.modal', function (e) {

                $('#default-modal-content').html(originalDefaulModalContent );
            });

            // Llamadas a funciones por primera vez

            Porcentaje1x10();
            TotalVotantesSeguros();
            TotalCasillas();
            //TotalAuditorias();
            FaltanDias();
            FaltanDiasCierre();

            // Para el día D
            VotosTotalPorHora();
            
        }); // document.ready

        // Dashboard - Números

        function Porcentaje1x10() {
            var url = '@Url.Action("Total1x10", "Persona")';

            $.ajax({
                cache: false,
                async: true,
                type: 'get',
                url: url,
                data: {},
                beforeSend: function () {
                    $('#personas1x10DIV').html('<img src="@Url.Content("~/Images/ajax-loader.gif")" />');
                },
                success: function (result) {
                    var totalAfinesMeta = result.totalMovilizadores * 10;
                    var porcentaje = Math.round((result.totalAfines * 100) / totalAfinesMeta);
                    //porcentaje = porcentaje.toLocaleString(undefined, { minimumFractionDigits: 2 })
                    $('#personas1x10DIV').html(porcentaje + '%');
                    $('#totalMovilizadoresDIV').html('De ' + result.totalMovilizadores + ' movilizadores');
                },
                error: function (xhr, status, error) {
                    //alert('Ha ocurrido una excepción: ' + xhr.responseText);
                    $('#personas1x10DIV').html('<span title="' + xhr.responseText +'">-</span>');
                }
            });

        } // Porcentaje1x10

        function TotalVotantesSeguros() {
            var url = '@Url.Action("TotalVotantesSeguros", "Persona")';

            $.ajax({
                cache: false,
                async: true,
                type: 'get',
                url: url,
                data: {},
                beforeSend: function () {
                    $('#totalVotantesSegurosDIV').html('<img src="@Url.Content("~/Images/ajax-loader.gif")" />');
                    $('#totalFaltanDIV').html('<img src="@Url.Content("~/Images/ajax-loader.gif")" />');
                    $('#totalSemanasDIV').html('<img src="@Url.Content("~/Images/ajax-loader.gif")" />');
                },
                success: function (result) {
                    var votosSeguros = result.votosSeguros.toLocaleString();
                    var porcentaje = Math.round((result.votosSeguros * 100) / result.votosMeta);

                    //console.log(votosSeguros);
                    //console.log(result.votosMeta);
                    //console.log(porcentaje);

                    if (porcentaje == Infinity) { porcentaje = 0; }

                    $('#totalVotantesSegurosDIV').html(votosSeguros);
                    $('#porcentajeVotantesSegurosSPAN').html(porcentaje + '% de avance');

                    // Faltán

                    var restan = result.votosMeta - result.votosSeguros;
                    if (result.votosMeta == 0) { restan = 0; }
                    $('#totalFaltanDIV').html(restan.toLocaleString());

                    //// Obtener por semana en promedio
                    //var fechaInicio = new Date();
                    //var fechaTermino = new Date('2018-06-20');
                    //var fechaDiff = fechaTermino - fechaInicio;
                    //var dias = fechaDiff / (1000 * 60 * 60 * 24);
                    //var semanas = Math.round(dias / 7);
                    //var promedio = Math.round(restan / semanas);

                    //$('#totalSemanasDIV').html(promedio.toLocaleString());

                },
                error: function (xhr, status, error) {
                    //alert('Ha ocurrido una excepción: ' + xhr.responseText);
                    $('#totalVotantesSegurosDIV').html('<span title="' + xhr.responseText +'">-</span>');
                }
            });

        } // TotalLonas

        function TotalBardas() {
            var url = '@Url.Action("TotalBardas", "Persona")';

            $.ajax({
                cache: false,
                async: true,
                type: 'get',
                url: url,
                data: {},
                beforeSend: function () {
                    $('#totalBardasDIV').html('<img src="@Url.Content("~/Images/ajax-loader.gif")" />');
                },
                success: function (result) {
                    $('#totalBardasDIV').html(result);
                },
                error: function (xhr, status, error) {
                    //alert('Ha ocurrido una excepción: ' + xhr.responseText);
                    $('#totalBardasDIV').html('-');
                }
            });

        } // TotalLonas

        function TotalLonas() {
            var url = '@Url.Action("TotalLonas", "Persona")';

            $.ajax({
                cache: false,
                async: true,
                type: 'get',
                url: url,
                data: {},
                beforeSend: function () {
                    $('#totalLonasDIV').html('<img src="@Url.Content("~/Images/ajax-loader.gif")" />');
                },
                success: function (result) {
                    $('#totalLonasDIV').html(result);
                },
                error: function (xhr, status, error) {
                    //alert('Ha ocurrido una excepción: ' + xhr.responseText);
                    $('#totalLonasDIV').html('-');
                }
            });

        } // TotalLonas

        function TotalCasillas() {
            var url = '@Url.Action("TotalCasillas", "Casilla")';

            $.ajax({
                cache: false,
                async: true,
                type: 'get',
                url: url,
                data: {},
                beforeSend: function () {
                    $('#totalCasillasDIV').html('<img src="@Url.Content("~/Images/ajax-loader.gif")" />');
                },
                success: function (result) {
                    $('#totalCasillasDIV').html(result.totalCasillas);
                    $('#totalSeccionesSPAN').html(result.totalSecciones + ' secciones');
                },
                error: function (xhr, status, error) {
                    //alert('Ha ocurrido una excepción: ' + xhr.responseText);
                    $('#totalCasillasDIV').html('-');
                }
            });

        } // TotalCasillas

        function TotalAuditorias() {
            var url = '@Url.Action("TotalAuditorias", "Auditoria")';

            $.ajax({
                cache: false,
                async: true,
                type: 'get',
                url: url,
                data: {},
                beforeSend: function () {
                    $('#totalAuditoriasDIV').html('<img src="@Url.Content("~/Images/ajax-loader.gif")" />');
                },
                success: function (result) {
                    $('#totalAuditoriasDIV').html(result.totalAuditorias);

                    var espera = 0;
                    var realizada = 0;
                    var cerrada = 0;
                    var cancelada = 0;

                    if (result.totalAuditorias > 0) {
                        espera = Math.round((result.totalAuditoriasEspera * 100) / result.totalAuditorias);
                        realizada = Math.round((result.totalAuditoriasRealizada * 100) / result.totalAuditorias);
                        cerrada = Math.round((result.totalAuditoriasCerrada * 100) / result.totalAuditorias);
                        cancelada = Math.round((result.totalAuditoriasCancelada * 100) / result.totalAuditorias);
                    }

                    var porcentajes = '<div class="row">';
                    porcentajes += '<div class="col-md-3 col-sm-3 col-xs-3 text-info text-right" title="Auditorias en espera">' + espera + '%</div>';
                    porcentajes += '<div class="col-md-3 col-sm-3 col-xs-3 text-success text-right" title="Auditorias realizadas">' + realizada + '%</div>';
                    porcentajes += '<div class="col-md-3 col-sm-3 col-xs-3 text-warning text-right" title="Auditorias terminadas">' + cerrada + '%</div>';
                    porcentajes += '<div class="col-md-3 col-sm-3 col-xs-3 text-danger text-right" title="Auditorias canceladas">' + cancelada + '%</div>';
                    porcentajes += '</div>';

                    $('#totalAuditoriasSPAN').html(porcentajes);

                },
                error: function (xhr, status, error) {
                    //alert('Ha ocurrido una excepción: ' + xhr.responseText);
                    $('#totalAuditoriasDIV').html('-');
                }
            });

        } // TotalAuditorias

        function FaltanDias() {
            var hoy = new Date();
            var diaD = new Date('2021-06-6');
            var dia_en_milisegundos = 86400000;

            var dias_restantes = diaD - hoy;
            //alert('diaD: ' + diaD + ', Hoy: ' + hoy);
            if (dias_restantes <= 0) {
                dias_restantes = 0;
            }
            else {
                dias_restantes = Math.trunc(dias_restantes / dia_en_milisegundos);
            }

            if (dias_restantes <= 7) {
                $('#totalAuditoriasDIV').addClass('text-danger');
            }
            else if (dias_restantes <= 15) {
                $('#totalAuditoriasDIV').addClass('text-warning');
            }
            else {
                $('#totalAuditoriasDIV').addClass('text-primary');
            }

            $('#totalAuditoriasDIV').html(dias_restantes);
        } // FaltanDias

        function FaltanDiasCierre() {
            var hoy = new Date();
            var diaD = new Date('2021-06-1');
            var dia_en_milisegundos = 86400000;

            var dias_restantes = diaD - hoy;

            if (dias_restantes <= 0) {
                dias_restantes = 0;
            }
            else {
                dias_restantes = Math.trunc(dias_restantes / dia_en_milisegundos);
            }

            if (dias_restantes <= 3) {
                $('#totalSemanasDIV').addClass('text-danger');
            }
            else if (dias_restantes <= 7) {
                $('#totalSemanasDIV').addClass('text-warning');
            }
            else {
                $('#totalSemanasDIV').addClass('text-primary');
            }

            $('#totalSemanasDIV').html(dias_restantes);
        } // FaltanDiasCierre

        // CHARTs

        function VotosRealizados() {
            var url = '@Url.Action("VotosRealizados", "Home")';

            $.ajax({
                cache: false,
                async: true,
                type: 'get',
                url: url,
                data: {},
                beforeSend: function () {
                    $('#votosRealizados').html('<p class="text-center" style="margin-top: 100px;"><img src="@Url.Content("~/Images/ajax-loader.gif")" /></p>');
                },
                success: function (result) {

                    if (result != null) {
                        var votosNoSeguros = result.TotalVotosRealizados - result.TotalVotosSegurosRealizados;
                        var votosSegurosRestantes = result.TotalVotosSeguros - result.TotalVotosSegurosRealizados;
                        var votosRestantes = result.TotalVotos - result.TotalVotosSeguros - votosNoSeguros;

                        votosNoSeguros = votosNoSeguros < 0 ? 0 : votosNoSeguros;
                        votosSegurosRestantes = votosSegurosRestantes < 0 ? 0 : votosSegurosRestantes;
                        votosRestantes = votosRestantes < 0 ? 0 : votosRestantes;

                        var data = google.visualization.arrayToDataTable([
                            ['Votos', 'Cantidad'],
                            ['Votos restantes', votosRestantes],
                            ['Votos realizados', votosNoSeguros],
                            ['Votos seguros realizados', result.TotalVotosSegurosRealizados],
                            ['Votos seguros restantes', votosSegurosRestantes]
                        ]);

                        var options = {
                            title: 'Votos realizados',
                            pieHole: 0.4,
                        };

                        var chart = new google.visualization.PieChart(document.getElementById('votosRealizados'));
                        chart.draw(data, options);
                    }
                },
                error: function (xhr, status, error) {
                    $('#votosRealizados').html('<span title="' + xhr.responseText + '">-</span>');
                }
            });

        } // VotosRealizados

        function VotosRealizadosPorSector() {
            var url = '@Url.Action("VotosRealizadosPorSector", "Home")';

            $.ajax({
                cache: false,
                async: true,
                type: 'get',
                url: url,
                beforeSend: function () {
                    $('#votosPorSector').html('<p class="text-center" style="margin-top: 100px;"><img src="@Url.Content("~/Images/ajax-loader.gif")" /></p>');
                },
                success: function (result) {

                    if (result != null) {
                        var data = new google.visualization.DataTable();

                        data.addColumn('string', 'Sectores');
                        data.addColumn('number', 'Votos restantes');
                        data.addColumn('number', 'Votos realizados');
                        data.addColumn('number', 'Votos seguros realizados');
                        data.addColumn('number', 'Votos seguros restantes');

                        data.addRows(result.length);
                        for (var i = 0; i < result.length; i++) {
                            var votosNoSeguros = result[i].totalVotosRealizados - result[i].totalVotosSegurosRealizados;
                            var votosSegurosRestantes = result[i].totalVotosSeguros - result[i].totalVotosSegurosRealizados;
                            var votosRestantes = result[i].totalVotos - result[i].totalVotosSeguros - votosNoSeguros;

                            votosNoSeguros = votosNoSeguros < 0 ? 0 : votosNoSeguros;
                            votosSegurosRestantes = votosSegurosRestantes < 0 ? 0 : votosSegurosRestantes;
                            votosRestantes = votosRestantes < 0 ? 0 : votosRestantes;

                            data.setCell(i, 0, result[i].sector);
                            data.setCell(i, 1, votosRestantes);
                            data.setCell(i, 2, votosNoSeguros);
                            data.setCell(i, 3, result[i].totalVotosSegurosRealizados);
                            data.setCell(i, 4, votosSegurosRestantes);
                        }

                        var options = {
                            width: '100%',
                            height: 300,
                            legend: { position: 'top', maxLines: 3 },
                            bar: { groupWidth: '75%' },
                            isStacked: true,
                        };

                        var chart = new google.visualization.ColumnChart(document.getElementById("votosPorSector"));
                        chart.draw(data, options);
                    }
                },
                error: function (xhr, status, error) {
                    $('#votosPorSector').html('<span title="' + xhr.responseText + '">-</span>');
                }
            });

        } // VotosRealizadosPorSector

        // GRAFICAS DE VOTOS EL DIA D

        function VotosTotalPorHora() {
            var url = '@Url.Action("VotosTotalPorHora", "Home")';
            $.ajax({
                cache: false,
                async: true,
                type: 'get',
                url: url,
                beforeSend: function () {
                    $('#votosPorHora').html('<p class="text-center" style="margin-top: 100px;"><img src="@Url.Content("~/Images/ajax-loader.gif")" /></p>');
                },
                success: function (result) {

                    if (result != null) {
                        var data = new google.visualization.DataTable();

                        data.addColumn('string', 'Hora');
                        data.addColumn('number', 'Votos');
                        data.addColumn('number', 'Votos seguros');

                        data.addRows(result.length);
                        for (var i = 0; i < result.length; i++) {
                            data.setCell(i, 0, result[i].hora);
                            data.setCell(i, 1, result[i].votosNoSeguros);
                            data.setCell(i, 2, result[i].votosSeguros);
                        }

                        var options = {
                            title: 'Total de votos por hora',
                            isStacked: 'absolute',
                            colors: ['#dc3912', '#ff9900']
                        };

                        var chart = new google.visualization.AreaChart(document.getElementById('votosPorHora'));
                        chart.draw(data, options);
                    }
                },
                error: function (xhr, status, error) {
                    $('#votosPorHora').html('<span title="' + xhr.responseText + '">-</span>');
                }
            });
        } // VotosTotal

        function ResultadosTotales() {
            var url = '@Url.Action("ResultadosTotales","Home")';

            $.ajax({
                cache: false,
                async: true,
                type: 'get',
                url: url,
                beforeSend: function () {
                    $('#resutaldosGenerales').html('<p class="text-center" style="margin-top: 100px;"><img src="@Url.Content("~/Images/ajax-loader.gif")" /></p>');
                },
                success: function (result) {

                    if (result != null) {
                        var data = new google.visualization.DataTable();

                        data.addColumn('string', 'Partidos');
                        data.addColumn('number', 'Votos');

                        data.addRows(result.length);
                        for (var i = 0; i < result.length; i++) {
                            data.setCell(i, 0, result[i].Partido);
                            data.setCell(i, 1, result[i].Total);
                        }

                        var options = {
                            chart: {
                                title: 'Total de votos por partido'
                            }
                        };

                        var chart = new google.charts.Bar(document.getElementById('resutaldosGenerales'));

                        chart.draw(data, google.charts.Bar.convertOptions(options));
                    }
                },
                error: function (xhr, status, error) {
                    $('#resutaldosGenerales').html('<span title="' + xhr.responseText + '">-</span>');
                }
            });


            //var data = google.visualization.arrayToDataTable([
            //    ['Partidos', 'Votos'],
            //    ['MC', 2480],
            //    ['PRI', 1170],
            //    ['PAN', 660],
            //    ['Morena', 1030],
            //    ['Chepe', 30],
            //    ['Nulos', 530]
            //]);

            //var options = {
            //    chart: {
            //        title: 'Total de votos por partido'                    
            //    }
            //};

            //var chart = new google.charts.Bar(document.getElementById('resutaldosGenerales'));

            //chart.draw(data, google.charts.Bar.convertOptions(options));

        } // ResultadosTotales

        function VotosCasillaPorHora(id) {
            var url = '@Url.Action("VotosCasillaPorHora", "Home")/' + id;

            $.ajax({
                cache: false,
                async: true,
                type: 'get',
                url: url,
                beforeSend: function () {
                    $('#votosPorCasilla').html('<p class="text-center" style="margin-top: 100px;"><img src="@Url.Content("~/Images/ajax-loader.gif")" /></p>');
                },
                success: function (result) {

                    if (result != null) {
                        var data = new google.visualization.DataTable();

                        data.addColumn('string', 'Hora');
                        data.addColumn('number', 'Votos');
                        data.addColumn('number', 'Votos seguros');

                        data.addRows(result.length);
                        for (var i = 0; i < result.length; i++) {
                            data.setCell(i, 0, result[i].hora);
                            data.setCell(i, 1, result[i].votosNoSeguros);
                            data.setCell(i, 2, result[i].votosSeguros);
                        }

                        var options = {
                            title: 'Total de votos por hora por casilla',
                            isStacked: 'absolute',
                            colors: ['#dc3912', '#ff9900']
                        };

                        var chart = new google.visualization.AreaChart(document.getElementById('votosPorCasilla'));
                        chart.draw(data, options);
                    }

                },
                error: function (xhr, status, error) {
                    $('#votosPorHora').html('<span title="' + xhr.responseText + '">-</span>');
                }
            });
        } // VotosCasillaPorHora

        function ResultadosPorCasilla(id) {
            var url = '@Url.Action("ResultadosPorCasilla", "Home")/' + id;

            $.ajax({
                cache: false,
                async: true,
                type: 'get',
                url: url,
                beforeSend: function () {
                    $('#resultadosPorCasilla').html('<p class="text-center" style="margin-top: 100px;"><img src="@Url.Content("~/Images/ajax-loader.gif")" /></p>');
                },
                success: function (result) {

                    if (result != null) {
                        var data = new google.visualization.DataTable();

                        data.addColumn('string', 'Partidos');
                        data.addColumn('number', 'Votos');

                        data.addRows(result.length);
                        for (var i = 0; i < result.length; i++) {
                            data.setCell(i, 0, result[i].Partido);
                            data.setCell(i, 1, result[i].Total);
                        }

                        var options = {
                            chart: {
                                title: 'Votos por partido'
                            }
                        };

                        var chart = new google.charts.Bar(document.getElementById('resultadosPorCasilla'));

                        chart.draw(data, google.charts.Bar.convertOptions(options));
                    }
                },
                error: function (xhr, status, error) {
                    $('#resutaldosGenerales').html('<span title="' + xhr.responseText + '">-</span>');
                }
            });

        } // ResultadosPorCasilla

        function CasillaBingo() {

            if (idCasillaActiva != '') {
                var url = '@Url.Action("ObtenerBingo", "Home")/' + idCasillaActiva;

                $('#defaultModal').modal('show');

                $.ajax({
                    cache: false,
                    async: true,
                    type: 'get',
                    url: url,
                    data: {},
                    beforeSend: function () {
                        $('#default-modal-body').html('<p class="text-center" style="margin: 50px;"><img src="@Url.Content("~/Images/ajax-loader.gif")" /></p>');
                    },
                    success: function (vista) {
                        switch (vista) {
                            case 'notid':
                                alert('Se perdió el identificador de la casilla');
                                break;
                            case 'notfound':
                                alert('No se encontró el registro de la casilla');
                                break;
                            default:
                                $('#default-modal-content').html(vista);
                                break;
                        }
                    },
                    error: function (xhr, status, error) {
                        alert('A ocurrido una excepción: ' + error);
                    }
                });

            }
            else {
                alert('No hay una casilla activa.');
            }

        } // CasillaBingo

        function CasillaFaltantes() {
            if (idCasillaActiva != '') {
                var url = '@Url.Action("ObtenerPersonasFaltantes", "Home")/' + idCasillaActiva;

                $('#defaultModal').modal('show');

                $.ajax({
                    cache: false,
                    async: true,
                    type: 'get',
                    url: url,
                    beforeSend: function () {
                        $('#default-modal-body').html('<p class="text-center" style="margin: 50px;"><img src="@Url.Content("~/Images/ajax-loader.gif")" /></p>');
                    },
                    success: function (vista) {
                        switch (vista) {
                            case 'notid':
                                alert('Se perdió el identificador de la casilla');
                                break;
                            case 'notfound':
                                alert('No se encontró el registro de la casilla');
                                break;
                            default:
                                $('#default-modal-content').html(vista);
                                break;
                        }
                    },
                    error: function (xhr, status, error) {
                        alert('A ocurrido una excepción: ' + error);
                    }
                });
            }
            else {
                alert('No hay una casilla activa');
            }
        }

        function ListaAfinidad() {



        } // ListaAfinidad

        // GRAFICAS DE SIMPATIZANTES

        function VotantesPorSectorTodos() {
            var url = '@Url.Action("VotosPorSectorTiempo", "Sector")';

            $.ajax({
                cache: false,
                async: true,
                type: 'get',
                url: url,
                data: {},
                beforeSend: function () {
                    $('#votantesSectorTodos').html('<p class="text-center" style="margin-top: 100px;"><img src="@Url.Content("~/Images/ajax-loader.gif")" /></p>');
                },
                success: function (result) {

                    if (result != null) {
                        mostrarGraficaVotosPorSectorTiempo(result);
                    }
                },
                error: function (xhr, status, error) {
                    //alert('Ha ocurrido una excepción: ' + xhr.responseText);
                    $('#votantesSectorTodos').html('<span title="' + xhr.responseText + '">-</span>');
                }
            });

        } // VotantesPorSectorTodos

        function mostrarGraficaVotosPorSectorTiempo(datos) {
            var data = new google.visualization.DataTable();

            var primerSemana = datos[0];

            for (var propertyName in primerSemana) { // https://stackoverflow.com/questions/85992/how-do-i-enumerate-the-properties-of-a-javascript-object
                //contenido += primerSemana[propertyName].Key + ': ' + primerSemana[propertyName].Value + '<br />';
                if (primerSemana[propertyName].Key == 'Semanas') {
                    data.addColumn('string', 'Semanas');
                }
                else {
                    data.addColumn('number', primerSemana[propertyName].Key);
                }
            }

            data.addRows(datos.length);
            var i = 0;
            for (var propertyName in datos) {
                var j = 0;

                for (var propName in datos[propertyName]) {
                    data.setCell(i, j, datos[propertyName][propName].Value);
                    j++;
                }

                i++;
            }

            var options = {
                title: 'Votos seguros',
                hAxis: { title: 'Semanas', titleTextStyle: { color: '#333' } },
                vAxis: { minValue: 0 },
                isStacked: 'absolute'
            };

            var chart = new google.visualization.AreaChart(document.getElementById('votantesSectorTodos'));
            chart.draw(data, options);

        } // mostrarGraficaVotosPorSectorTiempo

        // GRAFICAS DE AFINIDAD

        function VotantesMetaVSAlcanzados() {
            var url = '@Url.Action("VotosMetaVSAlcanzados", "Sector")';

            $.ajax({
                cache: false,
                async: true,
                type: 'get',
                url: url,
                data: {},
                beforeSend: function () {
                    $('#votantesMetaAlcanzados').html('<p class="text-center" style="margin-top: 100px;"><img src="@Url.Content("~/Images/ajax-loader.gif")" /></p>');
                },
                success: function (result) {

                    if (result != null) {
                        var data = new google.visualization.DataTable();

                        data.addColumn('string', 'Sectores');
                        data.addColumn('number', 'Trabajados');
                        data.addColumn('number', 'Alcanzados');
                        data.addColumn('number', 'Meta')

                        data.addRows(result.length);
                        for (var i = 0; i < result.length; i++) {
                            data.setCell(i, 0, result[i].Sector);
                            data.setCell(i, 1, result[i].Trabajados);
                            data.setCell(i, 2, result[i].Alcanzados);
                            data.setCell(i, 3, result[i].Meta);
                        }

                        var options = {
                            chart: {
                                title: 'Votos registrados por sector'
                            }
                        };

                        var chart = new google.charts.Bar(document.getElementById('votantesMetaAlcanzados'));
                        chart.draw(data, google.charts.Bar.convertOptions(options));
                    }
                },
                error: function (xhr, status, error) {
                    //alert('Ha ocurrido una excepción: ' + xhr.responseText);
                    $('#votantesMetaAlcanzados').html('<span title="' + xhr.responseText + '">-</span>');
                }
            });

            //var data = google.visualization.arrayToDataTable([
            //    ['Sectores', 'Alcanzados', 'Meta'],
            //    ['Sector 1', 1000, 400],
            //    ['Sector 2', 1170, 460],
            //    ['Sector 3', 660, 1120],
            //    ['Sector 4', 1030, 540],
            //    ['Sector 5', 1200, 400],
            //    ['Sector 6', 970, 460],
            //]);

            //var options = {
            //    chart: {
            //        title: 'Votos Meta vs Votos alcanzados',
            //        subtitle: 'Organizados por Sector',
            //    }
            //};

            //var chart = new google.charts.Bar(document.getElementById('votantesMetaAlcanzados'));

            //chart.draw(data, google.charts.Bar.convertOptions(options));

        } // VotantesMetaVSAlcanzados

        function ObtenerNombreCasillaTipo(tipo) {
            var casillaNombre = '';

            switch (tipo) {
                case @((int)CasillaTipo.Basica):
                    casillaNombre = '@Html.Raw(CasillaTipo.Basica.GetDisplayName())';
                    break;
                case @((int)CasillaTipo.Contigua):
                    casillaNombre = '@CasillaTipo.Contigua.GetDisplayName()';
                    break;
                case @((int)CasillaTipo.ContiguaII):
                    casillaNombre = '@CasillaTipo.ContiguaII.GetDisplayName()';
                    break;
                case @((int)CasillaTipo.ContiguaIII):
                    casillaNombre = '@CasillaTipo.ContiguaIII.GetDisplayName()';
                    break;
                case @((int)CasillaTipo.ContiguaIV):
                    casillaNombre = '@CasillaTipo.ContiguaIV.GetDisplayName()';
                    break;
                case @((int)CasillaTipo.ContiguaV):
                    casillaNombre = '@CasillaTipo.ContiguaV.GetDisplayName()';
                    break;
                case @((int)CasillaTipo.ContiguaVI):
                    casillaNombre = '@CasillaTipo.ContiguaVI.GetDisplayName()';
                    break;
                case @((int)CasillaTipo.ContiguaVII):
                    casillaNombre = '@CasillaTipo.ContiguaVII.GetDisplayName()';
                    break;
                case @((int)CasillaTipo.ContiguaVIII):
                    casillaNombre = '@CasillaTipo.ContiguaVIII.GetDisplayName()';
                    break;
                case @((int)CasillaTipo.ContiguaIX):
                    casillaNombre = '@CasillaTipo.ContiguaIX.GetDisplayName()';
                    break;
                case @((int)CasillaTipo.ContiguaX):
                    casillaNombre = '@CasillaTipo.ContiguaX.GetDisplayName()';
                    break;
            }

            return casillaNombre;
        } // ObtenerNombreCasillaTipo

    </script>
}